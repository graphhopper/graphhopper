# For a custom request you need to specify a profile (with weighting=custom) but on import we don't need this
# profile: car

# This term changes the influence of the distance. I.e. longer roads get a higher cost.
# The distance_influence is independent of the edge properties and does not influence the ETA. The default is 70 (seconds/1km).
# Let's assume a route that takes 1000sec and is 10km long, then a value of 30 means that I would like to drive maximum 11km
# to reduce the travel time to 970sec or 12km to reduce it to 940sec.
distance_influence: 90

# Now we want to set a preference without changing the taken time. The default priority is 1 and does not change something.
# The minimum value is 0 (block access). A value lower than 1 will avoid it. Values higher than 1 are not allowed.
# To prefer a certain case you lower the priority of all other entries. See the road_class entry where motorways are preferred.
# If two conditions are met the values will be multiplied except when first_match is used.
priority:
  - if: road_class == RESIDENTIAL
    multiply_by: 0.4
  - else_if: road_class != MOTORWAY
    multiply_by: 0.9
    # and if you do not want that routes go over tracks just exclude them:
    # else_if: road_class==TRACK
    # multiply_by: 0
  # let's assume we transport gas: so NEVER go on restricted roads with hazmat==NO
  - if: hazmat == NO
    multiply_by: 0
  # avoid destination-only roads
  # TODO include private and delivery only access for base car profile so that we can avoid it here, but not exclude it
  - if: road_access == DESTINATION
    multiply_by: 0.1
  # avoid turns if possible and links are one simple indication for that
  - if: road_class_link
    multiply_by: 0.5
  # avoid toll roads
  - if: toll != NO
    multiply_by: 0.5
  # avoid a certain area
  - if: in_custom1
    multiply_by: 0.5
  - if: max_weight < 4.5
    multiply_by: 0
  - if: max_height < 3.8
    multiply_by: 0
  - if: max_width < 2.5
    multiply_by: 0

# The formula is defined in CustomWeighting, where the "multiply_by" operation can be used to decrease speed.
# The minimum value is 0 and the maximum is 1. If two conditions are satisfied the values are
# multiplied e.g. if road_class==MOTORWAY and road_environment==TUNNEL, then the resulting speed is
# average_speed*0.85*0.9
speed:
  - if: road_environment == TUNNEL
    multiply_by: 0.85
  # trucks should be a bit slower on certain road classes compared to the 'base' car
  - if: road_class == MOTORWAY
    multiply_by: 0.85
  - if: road_class == PRIMARY
    multiply_by: 0.9
  # You can lower the average speed for certain conditions via the "limit_to" operation:
  - if: road_class == MOTORWAY
    limit_to: 95
  - if: road_class == RESIDENTIAL
    limit_to: 30
  - if: road_environment == BRIDGE
    limit_to: 85
  - else:
    limit_to: 100

areas:
  custom1:
    type: "Feature"
    geometry: { type: "Polygon", coordinates: [ [ [ 13.722, 51.053 ], [ 13.722, 51.055 ], [ 13.731, 51.055 ], [ 13.731, 51.053 ], [ 13.722, 51.053 ] ] ] }
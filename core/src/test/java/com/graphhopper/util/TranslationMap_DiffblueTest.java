/*
 * Copyright 2018 Diffblue Limited
 *
 * Diffblue Limited licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.graphhopper.util;

import static org.mockito.AdditionalMatchers.or;
import static org.mockito.Matchers.isA;
import static org.mockito.Matchers.isNull;
import static org.powermock.api.mockito.PowerMockito.mockStatic;

import com.graphhopper.util.Helper;
import com.graphhopper.util.TranslationMap;
import org.junit.Assert;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;
import org.junit.runner.RunWith;
import org.powermock.api.mockito.PowerMockito;
import org.powermock.core.classloader.annotations.PrepareForTest;
import org.powermock.modules.junit4.PowerMockRunner;

@RunWith(PowerMockRunner.class)
public class TranslationMap_DiffblueTest {

  @Rule public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: TranslationMap */

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   *  - conditional line 43 branch to line 44
   */
  @PrepareForTest({Helper.class})
  @Test
  public void countOccurenceInputNotNullNotNullOutputZero() throws Exception {

    // Setup mocks
    mockStatic(Helper.class);

    // Arrange
    final String phrase = " a`       ";
    final String splitter = "";
    PowerMockito.doReturn(true).when(Helper.class);
    Helper.isEmpty(or(isA(String.class), isNull(String.class)));

    // Act
    final int retval = TranslationMap.countOccurence(phrase, splitter);

    // Assert result
    Assert.assertEquals(0, retval);
  }
}

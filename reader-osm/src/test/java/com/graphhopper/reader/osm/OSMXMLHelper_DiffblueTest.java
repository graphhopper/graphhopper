/*
 * Copyright 2018 Diffblue Limited
 *
 * Diffblue Limited licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.graphhopper.reader.osm;

import static org.mockito.Matchers.anyLong;

import com.graphhopper.reader.ReaderRelation;
import com.graphhopper.reader.osm.OSMXMLHelper;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;
import org.junit.runner.RunWith;
import org.powermock.api.mockito.PowerMockito;
import org.powermock.core.classloader.annotations.PowerMockIgnore;
import org.powermock.core.classloader.annotations.PrepareForTest;
import org.powermock.modules.junit4.PowerMockRunner;

import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;

@PowerMockIgnore({"javax.management.*"})
@RunWith(PowerMockRunner.class)
public class OSMXMLHelper_DiffblueTest {

  @Rule public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: OSMXMLHelper */

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   *  - conditional line 85 branch to line 85
   *  - conditional line 87 branch to line 87
   */
  @PrepareForTest({OSMXMLHelper.class})
  @Test
  public void createRelationInputZeroNullOutputNullPointerException()
      throws Exception, XMLStreamException {

    // Arrange
    final long id = 0L;
    final XMLStreamReader parser = null;
    final ReaderRelation readerRelation = PowerMockito.mock(ReaderRelation.class);
    PowerMockito.whenNew(ReaderRelation.class)
        .withParameterTypes(long.class)
        .withArguments(anyLong())
        .thenReturn(readerRelation);

    // Act
    thrown.expect(NullPointerException.class);
    OSMXMLHelper.createRelation(id, parser);

    // Method is not expected to return due to exception thrown
  }
}

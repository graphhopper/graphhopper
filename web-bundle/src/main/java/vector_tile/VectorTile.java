// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/resources/vector_tile.proto

package vector_tile;

public final class VectorTile {
  private VectorTile() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TileOrBuilder extends
      // @@protoc_insertion_point(interface_extends:vector_tile.Tile)
      com.google.protobuf.GeneratedMessageV3.
          ExtendableMessageOrBuilder<Tile> {

    /**
     * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
     */
    java.util.List<vector_tile.VectorTile.Tile.Layer> 
        getLayersList();
    /**
     * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
     */
    vector_tile.VectorTile.Tile.Layer getLayers(int index);
    /**
     * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
     */
    int getLayersCount();
    /**
     * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
     */
    java.util.List<? extends vector_tile.VectorTile.Tile.LayerOrBuilder> 
        getLayersOrBuilderList();
    /**
     * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
     */
    vector_tile.VectorTile.Tile.LayerOrBuilder getLayersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code vector_tile.Tile}
   */
  public  static final class Tile extends
      com.google.protobuf.GeneratedMessageV3.ExtendableMessage<
        Tile> implements
      // @@protoc_insertion_point(message_implements:vector_tile.Tile)
      TileOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Tile.newBuilder() to construct.
    private Tile(com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<vector_tile.VectorTile.Tile, ?> builder) {
      super(builder);
    }
    private Tile() {
      layers_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Tile(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                layers_ = new java.util.ArrayList<vector_tile.VectorTile.Tile.Layer>();
                mutable_bitField0_ |= 0x00000001;
              }
              layers_.add(
                  input.readMessage(vector_tile.VectorTile.Tile.Layer.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          layers_ = java.util.Collections.unmodifiableList(layers_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return vector_tile.VectorTile.internal_static_vector_tile_Tile_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return vector_tile.VectorTile.internal_static_vector_tile_Tile_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              vector_tile.VectorTile.Tile.class, vector_tile.VectorTile.Tile.Builder.class);
    }

    /**
     * <pre>
     * GeomType is described in section 4.3.4 of the specification
     * </pre>
     *
     * Protobuf enum {@code vector_tile.Tile.GeomType}
     */
    public enum GeomType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWN = 0;</code>
       */
      UNKNOWN(0),
      /**
       * <code>POINT = 1;</code>
       */
      POINT(1),
      /**
       * <code>LINESTRING = 2;</code>
       */
      LINESTRING(2),
      /**
       * <code>POLYGON = 3;</code>
       */
      POLYGON(3),
      ;

      /**
       * <code>UNKNOWN = 0;</code>
       */
      public static final int UNKNOWN_VALUE = 0;
      /**
       * <code>POINT = 1;</code>
       */
      public static final int POINT_VALUE = 1;
      /**
       * <code>LINESTRING = 2;</code>
       */
      public static final int LINESTRING_VALUE = 2;
      /**
       * <code>POLYGON = 3;</code>
       */
      public static final int POLYGON_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static GeomType valueOf(int value) {
        return forNumber(value);
      }

      public static GeomType forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN;
          case 1: return POINT;
          case 2: return LINESTRING;
          case 3: return POLYGON;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<GeomType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          GeomType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<GeomType>() {
              public GeomType findValueByNumber(int number) {
                return GeomType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return vector_tile.VectorTile.Tile.getDescriptor().getEnumTypes().get(0);
      }

      private static final GeomType[] VALUES = values();

      public static GeomType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private GeomType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:vector_tile.Tile.GeomType)
    }

    public interface ValueOrBuilder extends
        // @@protoc_insertion_point(interface_extends:vector_tile.Tile.Value)
        com.google.protobuf.GeneratedMessageV3.
            ExtendableMessageOrBuilder<Value> {

      /**
       * <pre>
       * Exactly one of these values must be present in a valid message
       * </pre>
       *
       * <code>optional string string_value = 1;</code>
       */
      boolean hasStringValue();
      /**
       * <pre>
       * Exactly one of these values must be present in a valid message
       * </pre>
       *
       * <code>optional string string_value = 1;</code>
       */
      java.lang.String getStringValue();
      /**
       * <pre>
       * Exactly one of these values must be present in a valid message
       * </pre>
       *
       * <code>optional string string_value = 1;</code>
       */
      com.google.protobuf.ByteString
          getStringValueBytes();

      /**
       * <code>optional float float_value = 2;</code>
       */
      boolean hasFloatValue();
      /**
       * <code>optional float float_value = 2;</code>
       */
      float getFloatValue();

      /**
       * <code>optional double double_value = 3;</code>
       */
      boolean hasDoubleValue();
      /**
       * <code>optional double double_value = 3;</code>
       */
      double getDoubleValue();

      /**
       * <code>optional int64 int_value = 4;</code>
       */
      boolean hasIntValue();
      /**
       * <code>optional int64 int_value = 4;</code>
       */
      long getIntValue();

      /**
       * <code>optional uint64 uint_value = 5;</code>
       */
      boolean hasUintValue();
      /**
       * <code>optional uint64 uint_value = 5;</code>
       */
      long getUintValue();

      /**
       * <code>optional sint64 sint_value = 6;</code>
       */
      boolean hasSintValue();
      /**
       * <code>optional sint64 sint_value = 6;</code>
       */
      long getSintValue();

      /**
       * <code>optional bool bool_value = 7;</code>
       */
      boolean hasBoolValue();
      /**
       * <code>optional bool bool_value = 7;</code>
       */
      boolean getBoolValue();
    }
    /**
     * <pre>
     * Variant type encoding
     * The use of values is described in section 4.1 of the specification
     * </pre>
     *
     * Protobuf type {@code vector_tile.Tile.Value}
     */
    public  static final class Value extends
        com.google.protobuf.GeneratedMessageV3.ExtendableMessage<
          Value> implements
        // @@protoc_insertion_point(message_implements:vector_tile.Tile.Value)
        ValueOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Value.newBuilder() to construct.
      private Value(com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<vector_tile.VectorTile.Tile.Value, ?> builder) {
        super(builder);
      }
      private Value() {
        stringValue_ = "";
        floatValue_ = 0F;
        doubleValue_ = 0D;
        intValue_ = 0L;
        uintValue_ = 0L;
        sintValue_ = 0L;
        boolValue_ = false;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Value(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                stringValue_ = bs;
                break;
              }
              case 21: {
                bitField0_ |= 0x00000002;
                floatValue_ = input.readFloat();
                break;
              }
              case 25: {
                bitField0_ |= 0x00000004;
                doubleValue_ = input.readDouble();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                intValue_ = input.readInt64();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                uintValue_ = input.readUInt64();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                sintValue_ = input.readSInt64();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000040;
                boolValue_ = input.readBool();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return vector_tile.VectorTile.internal_static_vector_tile_Tile_Value_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return vector_tile.VectorTile.internal_static_vector_tile_Tile_Value_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                vector_tile.VectorTile.Tile.Value.class, vector_tile.VectorTile.Tile.Value.Builder.class);
      }

      private int bitField0_;
      public static final int STRING_VALUE_FIELD_NUMBER = 1;
      private volatile java.lang.Object stringValue_;
      /**
       * <pre>
       * Exactly one of these values must be present in a valid message
       * </pre>
       *
       * <code>optional string string_value = 1;</code>
       */
      public boolean hasStringValue() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Exactly one of these values must be present in a valid message
       * </pre>
       *
       * <code>optional string string_value = 1;</code>
       */
      public java.lang.String getStringValue() {
        java.lang.Object ref = stringValue_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            stringValue_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Exactly one of these values must be present in a valid message
       * </pre>
       *
       * <code>optional string string_value = 1;</code>
       */
      public com.google.protobuf.ByteString
          getStringValueBytes() {
        java.lang.Object ref = stringValue_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stringValue_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int FLOAT_VALUE_FIELD_NUMBER = 2;
      private float floatValue_;
      /**
       * <code>optional float float_value = 2;</code>
       */
      public boolean hasFloatValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float float_value = 2;</code>
       */
      public float getFloatValue() {
        return floatValue_;
      }

      public static final int DOUBLE_VALUE_FIELD_NUMBER = 3;
      private double doubleValue_;
      /**
       * <code>optional double double_value = 3;</code>
       */
      public boolean hasDoubleValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional double double_value = 3;</code>
       */
      public double getDoubleValue() {
        return doubleValue_;
      }

      public static final int INT_VALUE_FIELD_NUMBER = 4;
      private long intValue_;
      /**
       * <code>optional int64 int_value = 4;</code>
       */
      public boolean hasIntValue() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 int_value = 4;</code>
       */
      public long getIntValue() {
        return intValue_;
      }

      public static final int UINT_VALUE_FIELD_NUMBER = 5;
      private long uintValue_;
      /**
       * <code>optional uint64 uint_value = 5;</code>
       */
      public boolean hasUintValue() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 uint_value = 5;</code>
       */
      public long getUintValue() {
        return uintValue_;
      }

      public static final int SINT_VALUE_FIELD_NUMBER = 6;
      private long sintValue_;
      /**
       * <code>optional sint64 sint_value = 6;</code>
       */
      public boolean hasSintValue() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional sint64 sint_value = 6;</code>
       */
      public long getSintValue() {
        return sintValue_;
      }

      public static final int BOOL_VALUE_FIELD_NUMBER = 7;
      private boolean boolValue_;
      /**
       * <code>optional bool bool_value = 7;</code>
       */
      public boolean hasBoolValue() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool bool_value = 7;</code>
       */
      public boolean getBoolValue() {
        return boolValue_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!extensionsAreInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        com.google.protobuf.GeneratedMessageV3
          .ExtendableMessage<vector_tile.VectorTile.Tile.Value>.ExtensionWriter
            extensionWriter = newExtensionWriter();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, stringValue_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeFloat(2, floatValue_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeDouble(3, doubleValue_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt64(4, intValue_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt64(5, uintValue_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeSInt64(6, sintValue_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeBool(7, boolValue_);
        }
        extensionWriter.writeUntil(536870912, output);
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, stringValue_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, floatValue_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(3, doubleValue_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(4, intValue_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(5, uintValue_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt64Size(6, sintValue_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(7, boolValue_);
        }
        size += extensionsSerializedSize();
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof vector_tile.VectorTile.Tile.Value)) {
          return super.equals(obj);
        }
        vector_tile.VectorTile.Tile.Value other = (vector_tile.VectorTile.Tile.Value) obj;

        boolean result = true;
        result = result && (hasStringValue() == other.hasStringValue());
        if (hasStringValue()) {
          result = result && getStringValue()
              .equals(other.getStringValue());
        }
        result = result && (hasFloatValue() == other.hasFloatValue());
        if (hasFloatValue()) {
          result = result && (
              java.lang.Float.floatToIntBits(getFloatValue())
              == java.lang.Float.floatToIntBits(
                  other.getFloatValue()));
        }
        result = result && (hasDoubleValue() == other.hasDoubleValue());
        if (hasDoubleValue()) {
          result = result && (
              java.lang.Double.doubleToLongBits(getDoubleValue())
              == java.lang.Double.doubleToLongBits(
                  other.getDoubleValue()));
        }
        result = result && (hasIntValue() == other.hasIntValue());
        if (hasIntValue()) {
          result = result && (getIntValue()
              == other.getIntValue());
        }
        result = result && (hasUintValue() == other.hasUintValue());
        if (hasUintValue()) {
          result = result && (getUintValue()
              == other.getUintValue());
        }
        result = result && (hasSintValue() == other.hasSintValue());
        if (hasSintValue()) {
          result = result && (getSintValue()
              == other.getSintValue());
        }
        result = result && (hasBoolValue() == other.hasBoolValue());
        if (hasBoolValue()) {
          result = result && (getBoolValue()
              == other.getBoolValue());
        }
        result = result && unknownFields.equals(other.unknownFields);
        result = result &&
            getExtensionFields().equals(other.getExtensionFields());
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasStringValue()) {
          hash = (37 * hash) + STRING_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getStringValue().hashCode();
        }
        if (hasFloatValue()) {
          hash = (37 * hash) + FLOAT_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getFloatValue());
        }
        if (hasDoubleValue()) {
          hash = (37 * hash) + DOUBLE_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getDoubleValue()));
        }
        if (hasIntValue()) {
          hash = (37 * hash) + INT_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getIntValue());
        }
        if (hasUintValue()) {
          hash = (37 * hash) + UINT_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getUintValue());
        }
        if (hasSintValue()) {
          hash = (37 * hash) + SINT_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getSintValue());
        }
        if (hasBoolValue()) {
          hash = (37 * hash) + BOOL_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getBoolValue());
        }
        hash = hashFields(hash, getExtensionFields());
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static vector_tile.VectorTile.Tile.Value parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static vector_tile.VectorTile.Tile.Value parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static vector_tile.VectorTile.Tile.Value parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static vector_tile.VectorTile.Tile.Value parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static vector_tile.VectorTile.Tile.Value parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static vector_tile.VectorTile.Tile.Value parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static vector_tile.VectorTile.Tile.Value parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static vector_tile.VectorTile.Tile.Value parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static vector_tile.VectorTile.Tile.Value parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static vector_tile.VectorTile.Tile.Value parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static vector_tile.VectorTile.Tile.Value parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static vector_tile.VectorTile.Tile.Value parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(vector_tile.VectorTile.Tile.Value prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Variant type encoding
       * The use of values is described in section 4.1 of the specification
       * </pre>
       *
       * Protobuf type {@code vector_tile.Tile.Value}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<
            vector_tile.VectorTile.Tile.Value, Builder> implements
          // @@protoc_insertion_point(builder_implements:vector_tile.Tile.Value)
          vector_tile.VectorTile.Tile.ValueOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return vector_tile.VectorTile.internal_static_vector_tile_Tile_Value_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return vector_tile.VectorTile.internal_static_vector_tile_Tile_Value_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  vector_tile.VectorTile.Tile.Value.class, vector_tile.VectorTile.Tile.Value.Builder.class);
        }

        // Construct using vector_tile.VectorTile.Tile.Value.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          stringValue_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          floatValue_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000002);
          doubleValue_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000004);
          intValue_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000008);
          uintValue_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000010);
          sintValue_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000020);
          boolValue_ = false;
          bitField0_ = (bitField0_ & ~0x00000040);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return vector_tile.VectorTile.internal_static_vector_tile_Tile_Value_descriptor;
        }

        @java.lang.Override
        public vector_tile.VectorTile.Tile.Value getDefaultInstanceForType() {
          return vector_tile.VectorTile.Tile.Value.getDefaultInstance();
        }

        @java.lang.Override
        public vector_tile.VectorTile.Tile.Value build() {
          vector_tile.VectorTile.Tile.Value result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public vector_tile.VectorTile.Tile.Value buildPartial() {
          vector_tile.VectorTile.Tile.Value result = new vector_tile.VectorTile.Tile.Value(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.stringValue_ = stringValue_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.floatValue_ = floatValue_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.doubleValue_ = doubleValue_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.intValue_ = intValue_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.uintValue_ = uintValue_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.sintValue_ = sintValue_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.boolValue_ = boolValue_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return (Builder) super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public <Type> Builder setExtension(
            com.google.protobuf.GeneratedMessage.GeneratedExtension<
                vector_tile.VectorTile.Tile.Value, Type> extension,
            Type value) {
          return (Builder) super.setExtension(extension, value);
        }
        @java.lang.Override
        public <Type> Builder setExtension(
            com.google.protobuf.GeneratedMessage.GeneratedExtension<
                vector_tile.VectorTile.Tile.Value, java.util.List<Type>> extension,
            int index, Type value) {
          return (Builder) super.setExtension(extension, index, value);
        }
        @java.lang.Override
        public <Type> Builder addExtension(
            com.google.protobuf.GeneratedMessage.GeneratedExtension<
                vector_tile.VectorTile.Tile.Value, java.util.List<Type>> extension,
            Type value) {
          return (Builder) super.addExtension(extension, value);
        }
        @java.lang.Override
        public <Type> Builder clearExtension(
            com.google.protobuf.GeneratedMessage.GeneratedExtension<
                vector_tile.VectorTile.Tile.Value, ?> extension) {
          return (Builder) super.clearExtension(extension);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof vector_tile.VectorTile.Tile.Value) {
            return mergeFrom((vector_tile.VectorTile.Tile.Value)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(vector_tile.VectorTile.Tile.Value other) {
          if (other == vector_tile.VectorTile.Tile.Value.getDefaultInstance()) return this;
          if (other.hasStringValue()) {
            bitField0_ |= 0x00000001;
            stringValue_ = other.stringValue_;
            onChanged();
          }
          if (other.hasFloatValue()) {
            setFloatValue(other.getFloatValue());
          }
          if (other.hasDoubleValue()) {
            setDoubleValue(other.getDoubleValue());
          }
          if (other.hasIntValue()) {
            setIntValue(other.getIntValue());
          }
          if (other.hasUintValue()) {
            setUintValue(other.getUintValue());
          }
          if (other.hasSintValue()) {
            setSintValue(other.getSintValue());
          }
          if (other.hasBoolValue()) {
            setBoolValue(other.getBoolValue());
          }
          this.mergeExtensionFields(other);
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          if (!extensionsAreInitialized()) {
            return false;
          }
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          vector_tile.VectorTile.Tile.Value parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (vector_tile.VectorTile.Tile.Value) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object stringValue_ = "";
        /**
         * <pre>
         * Exactly one of these values must be present in a valid message
         * </pre>
         *
         * <code>optional string string_value = 1;</code>
         */
        public boolean hasStringValue() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <pre>
         * Exactly one of these values must be present in a valid message
         * </pre>
         *
         * <code>optional string string_value = 1;</code>
         */
        public java.lang.String getStringValue() {
          java.lang.Object ref = stringValue_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              stringValue_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Exactly one of these values must be present in a valid message
         * </pre>
         *
         * <code>optional string string_value = 1;</code>
         */
        public com.google.protobuf.ByteString
            getStringValueBytes() {
          java.lang.Object ref = stringValue_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            stringValue_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Exactly one of these values must be present in a valid message
         * </pre>
         *
         * <code>optional string string_value = 1;</code>
         */
        public Builder setStringValue(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          stringValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Exactly one of these values must be present in a valid message
         * </pre>
         *
         * <code>optional string string_value = 1;</code>
         */
        public Builder clearStringValue() {
          bitField0_ = (bitField0_ & ~0x00000001);
          stringValue_ = getDefaultInstance().getStringValue();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Exactly one of these values must be present in a valid message
         * </pre>
         *
         * <code>optional string string_value = 1;</code>
         */
        public Builder setStringValueBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          stringValue_ = value;
          onChanged();
          return this;
        }

        private float floatValue_ ;
        /**
         * <code>optional float float_value = 2;</code>
         */
        public boolean hasFloatValue() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional float float_value = 2;</code>
         */
        public float getFloatValue() {
          return floatValue_;
        }
        /**
         * <code>optional float float_value = 2;</code>
         */
        public Builder setFloatValue(float value) {
          bitField0_ |= 0x00000002;
          floatValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float float_value = 2;</code>
         */
        public Builder clearFloatValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          floatValue_ = 0F;
          onChanged();
          return this;
        }

        private double doubleValue_ ;
        /**
         * <code>optional double double_value = 3;</code>
         */
        public boolean hasDoubleValue() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional double double_value = 3;</code>
         */
        public double getDoubleValue() {
          return doubleValue_;
        }
        /**
         * <code>optional double double_value = 3;</code>
         */
        public Builder setDoubleValue(double value) {
          bitField0_ |= 0x00000004;
          doubleValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double double_value = 3;</code>
         */
        public Builder clearDoubleValue() {
          bitField0_ = (bitField0_ & ~0x00000004);
          doubleValue_ = 0D;
          onChanged();
          return this;
        }

        private long intValue_ ;
        /**
         * <code>optional int64 int_value = 4;</code>
         */
        public boolean hasIntValue() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional int64 int_value = 4;</code>
         */
        public long getIntValue() {
          return intValue_;
        }
        /**
         * <code>optional int64 int_value = 4;</code>
         */
        public Builder setIntValue(long value) {
          bitField0_ |= 0x00000008;
          intValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 int_value = 4;</code>
         */
        public Builder clearIntValue() {
          bitField0_ = (bitField0_ & ~0x00000008);
          intValue_ = 0L;
          onChanged();
          return this;
        }

        private long uintValue_ ;
        /**
         * <code>optional uint64 uint_value = 5;</code>
         */
        public boolean hasUintValue() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint64 uint_value = 5;</code>
         */
        public long getUintValue() {
          return uintValue_;
        }
        /**
         * <code>optional uint64 uint_value = 5;</code>
         */
        public Builder setUintValue(long value) {
          bitField0_ |= 0x00000010;
          uintValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 uint_value = 5;</code>
         */
        public Builder clearUintValue() {
          bitField0_ = (bitField0_ & ~0x00000010);
          uintValue_ = 0L;
          onChanged();
          return this;
        }

        private long sintValue_ ;
        /**
         * <code>optional sint64 sint_value = 6;</code>
         */
        public boolean hasSintValue() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional sint64 sint_value = 6;</code>
         */
        public long getSintValue() {
          return sintValue_;
        }
        /**
         * <code>optional sint64 sint_value = 6;</code>
         */
        public Builder setSintValue(long value) {
          bitField0_ |= 0x00000020;
          sintValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional sint64 sint_value = 6;</code>
         */
        public Builder clearSintValue() {
          bitField0_ = (bitField0_ & ~0x00000020);
          sintValue_ = 0L;
          onChanged();
          return this;
        }

        private boolean boolValue_ ;
        /**
         * <code>optional bool bool_value = 7;</code>
         */
        public boolean hasBoolValue() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional bool bool_value = 7;</code>
         */
        public boolean getBoolValue() {
          return boolValue_;
        }
        /**
         * <code>optional bool bool_value = 7;</code>
         */
        public Builder setBoolValue(boolean value) {
          bitField0_ |= 0x00000040;
          boolValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool bool_value = 7;</code>
         */
        public Builder clearBoolValue() {
          bitField0_ = (bitField0_ & ~0x00000040);
          boolValue_ = false;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:vector_tile.Tile.Value)
      }

      // @@protoc_insertion_point(class_scope:vector_tile.Tile.Value)
      private static final vector_tile.VectorTile.Tile.Value DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new vector_tile.VectorTile.Tile.Value();
      }

      public static vector_tile.VectorTile.Tile.Value getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Value>
          PARSER = new com.google.protobuf.AbstractParser<Value>() {
        @java.lang.Override
        public Value parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Value(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Value> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Value> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public vector_tile.VectorTile.Tile.Value getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface FeatureOrBuilder extends
        // @@protoc_insertion_point(interface_extends:vector_tile.Tile.Feature)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint64 id = 1 [default = 0];</code>
       */
      boolean hasId();
      /**
       * <code>optional uint64 id = 1 [default = 0];</code>
       */
      long getId();

      /**
       * <pre>
       * Tags of this feature are encoded as repeated pairs of
       * integers.
       * A detailed description of tags is located in sections
       * 4.2 and 4.4 of the specification
       * </pre>
       *
       * <code>repeated uint32 tags = 2 [packed = true];</code>
       */
      java.util.List<java.lang.Integer> getTagsList();
      /**
       * <pre>
       * Tags of this feature are encoded as repeated pairs of
       * integers.
       * A detailed description of tags is located in sections
       * 4.2 and 4.4 of the specification
       * </pre>
       *
       * <code>repeated uint32 tags = 2 [packed = true];</code>
       */
      int getTagsCount();
      /**
       * <pre>
       * Tags of this feature are encoded as repeated pairs of
       * integers.
       * A detailed description of tags is located in sections
       * 4.2 and 4.4 of the specification
       * </pre>
       *
       * <code>repeated uint32 tags = 2 [packed = true];</code>
       */
      int getTags(int index);

      /**
       * <pre>
       * The type of geometry stored in this feature.
       * </pre>
       *
       * <code>optional .vector_tile.Tile.GeomType type = 3 [default = UNKNOWN];</code>
       */
      boolean hasType();
      /**
       * <pre>
       * The type of geometry stored in this feature.
       * </pre>
       *
       * <code>optional .vector_tile.Tile.GeomType type = 3 [default = UNKNOWN];</code>
       */
      vector_tile.VectorTile.Tile.GeomType getType();

      /**
       * <pre>
       * Contains a stream of commands and parameters (vertices).
       * A detailed description on geometry encoding is located in 
       * section 4.3 of the specification.
       * </pre>
       *
       * <code>repeated uint32 geometry = 4 [packed = true];</code>
       */
      java.util.List<java.lang.Integer> getGeometryList();
      /**
       * <pre>
       * Contains a stream of commands and parameters (vertices).
       * A detailed description on geometry encoding is located in 
       * section 4.3 of the specification.
       * </pre>
       *
       * <code>repeated uint32 geometry = 4 [packed = true];</code>
       */
      int getGeometryCount();
      /**
       * <pre>
       * Contains a stream of commands and parameters (vertices).
       * A detailed description on geometry encoding is located in 
       * section 4.3 of the specification.
       * </pre>
       *
       * <code>repeated uint32 geometry = 4 [packed = true];</code>
       */
      int getGeometry(int index);
    }
    /**
     * <pre>
     * Features are described in section 4.2 of the specification
     * </pre>
     *
     * Protobuf type {@code vector_tile.Tile.Feature}
     */
    public  static final class Feature extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:vector_tile.Tile.Feature)
        FeatureOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Feature.newBuilder() to construct.
      private Feature(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Feature() {
        id_ = 0L;
        tags_ = java.util.Collections.emptyList();
        type_ = 0;
        geometry_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Feature(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                bitField0_ |= 0x00000001;
                id_ = input.readUInt64();
                break;
              }
              case 16: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  tags_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000002;
                }
                tags_.add(input.readUInt32());
                break;
              }
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                  tags_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000002;
                }
                while (input.getBytesUntilLimit() > 0) {
                  tags_.add(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 24: {
                int rawValue = input.readEnum();
                  @SuppressWarnings("deprecation")
                vector_tile.VectorTile.Tile.GeomType value = vector_tile.VectorTile.Tile.GeomType.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(3, rawValue);
                } else {
                  bitField0_ |= 0x00000002;
                  type_ = rawValue;
                }
                break;
              }
              case 32: {
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  geometry_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000008;
                }
                geometry_.add(input.readUInt32());
                break;
              }
              case 34: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                  geometry_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000008;
                }
                while (input.getBytesUntilLimit() > 0) {
                  geometry_.add(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            tags_ = java.util.Collections.unmodifiableList(tags_);
          }
          if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
            geometry_ = java.util.Collections.unmodifiableList(geometry_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return vector_tile.VectorTile.internal_static_vector_tile_Tile_Feature_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return vector_tile.VectorTile.internal_static_vector_tile_Tile_Feature_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                vector_tile.VectorTile.Tile.Feature.class, vector_tile.VectorTile.Tile.Feature.Builder.class);
      }

      private int bitField0_;
      public static final int ID_FIELD_NUMBER = 1;
      private long id_;
      /**
       * <code>optional uint64 id = 1 [default = 0];</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 id = 1 [default = 0];</code>
       */
      public long getId() {
        return id_;
      }

      public static final int TAGS_FIELD_NUMBER = 2;
      private java.util.List<java.lang.Integer> tags_;
      /**
       * <pre>
       * Tags of this feature are encoded as repeated pairs of
       * integers.
       * A detailed description of tags is located in sections
       * 4.2 and 4.4 of the specification
       * </pre>
       *
       * <code>repeated uint32 tags = 2 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getTagsList() {
        return tags_;
      }
      /**
       * <pre>
       * Tags of this feature are encoded as repeated pairs of
       * integers.
       * A detailed description of tags is located in sections
       * 4.2 and 4.4 of the specification
       * </pre>
       *
       * <code>repeated uint32 tags = 2 [packed = true];</code>
       */
      public int getTagsCount() {
        return tags_.size();
      }
      /**
       * <pre>
       * Tags of this feature are encoded as repeated pairs of
       * integers.
       * A detailed description of tags is located in sections
       * 4.2 and 4.4 of the specification
       * </pre>
       *
       * <code>repeated uint32 tags = 2 [packed = true];</code>
       */
      public int getTags(int index) {
        return tags_.get(index);
      }
      private int tagsMemoizedSerializedSize = -1;

      public static final int TYPE_FIELD_NUMBER = 3;
      private int type_;
      /**
       * <pre>
       * The type of geometry stored in this feature.
       * </pre>
       *
       * <code>optional .vector_tile.Tile.GeomType type = 3 [default = UNKNOWN];</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * The type of geometry stored in this feature.
       * </pre>
       *
       * <code>optional .vector_tile.Tile.GeomType type = 3 [default = UNKNOWN];</code>
       */
      public vector_tile.VectorTile.Tile.GeomType getType() {
        @SuppressWarnings("deprecation")
        vector_tile.VectorTile.Tile.GeomType result = vector_tile.VectorTile.Tile.GeomType.valueOf(type_);
        return result == null ? vector_tile.VectorTile.Tile.GeomType.UNKNOWN : result;
      }

      public static final int GEOMETRY_FIELD_NUMBER = 4;
      private java.util.List<java.lang.Integer> geometry_;
      /**
       * <pre>
       * Contains a stream of commands and parameters (vertices).
       * A detailed description on geometry encoding is located in 
       * section 4.3 of the specification.
       * </pre>
       *
       * <code>repeated uint32 geometry = 4 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getGeometryList() {
        return geometry_;
      }
      /**
       * <pre>
       * Contains a stream of commands and parameters (vertices).
       * A detailed description on geometry encoding is located in 
       * section 4.3 of the specification.
       * </pre>
       *
       * <code>repeated uint32 geometry = 4 [packed = true];</code>
       */
      public int getGeometryCount() {
        return geometry_.size();
      }
      /**
       * <pre>
       * Contains a stream of commands and parameters (vertices).
       * A detailed description on geometry encoding is located in 
       * section 4.3 of the specification.
       * </pre>
       *
       * <code>repeated uint32 geometry = 4 [packed = true];</code>
       */
      public int getGeometry(int index) {
        return geometry_.get(index);
      }
      private int geometryMemoizedSerializedSize = -1;

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt64(1, id_);
        }
        if (getTagsList().size() > 0) {
          output.writeUInt32NoTag(18);
          output.writeUInt32NoTag(tagsMemoizedSerializedSize);
        }
        for (int i = 0; i < tags_.size(); i++) {
          output.writeUInt32NoTag(tags_.get(i));
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeEnum(3, type_);
        }
        if (getGeometryList().size() > 0) {
          output.writeUInt32NoTag(34);
          output.writeUInt32NoTag(geometryMemoizedSerializedSize);
        }
        for (int i = 0; i < geometry_.size(); i++) {
          output.writeUInt32NoTag(geometry_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, id_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < tags_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(tags_.get(i));
          }
          size += dataSize;
          if (!getTagsList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          tagsMemoizedSerializedSize = dataSize;
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(3, type_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < geometry_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(geometry_.get(i));
          }
          size += dataSize;
          if (!getGeometryList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          geometryMemoizedSerializedSize = dataSize;
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof vector_tile.VectorTile.Tile.Feature)) {
          return super.equals(obj);
        }
        vector_tile.VectorTile.Tile.Feature other = (vector_tile.VectorTile.Tile.Feature) obj;

        boolean result = true;
        result = result && (hasId() == other.hasId());
        if (hasId()) {
          result = result && (getId()
              == other.getId());
        }
        result = result && getTagsList()
            .equals(other.getTagsList());
        result = result && (hasType() == other.hasType());
        if (hasType()) {
          result = result && type_ == other.type_;
        }
        result = result && getGeometryList()
            .equals(other.getGeometryList());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasId()) {
          hash = (37 * hash) + ID_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getId());
        }
        if (getTagsCount() > 0) {
          hash = (37 * hash) + TAGS_FIELD_NUMBER;
          hash = (53 * hash) + getTagsList().hashCode();
        }
        if (hasType()) {
          hash = (37 * hash) + TYPE_FIELD_NUMBER;
          hash = (53 * hash) + type_;
        }
        if (getGeometryCount() > 0) {
          hash = (37 * hash) + GEOMETRY_FIELD_NUMBER;
          hash = (53 * hash) + getGeometryList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static vector_tile.VectorTile.Tile.Feature parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static vector_tile.VectorTile.Tile.Feature parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static vector_tile.VectorTile.Tile.Feature parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static vector_tile.VectorTile.Tile.Feature parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static vector_tile.VectorTile.Tile.Feature parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static vector_tile.VectorTile.Tile.Feature parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static vector_tile.VectorTile.Tile.Feature parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static vector_tile.VectorTile.Tile.Feature parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static vector_tile.VectorTile.Tile.Feature parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static vector_tile.VectorTile.Tile.Feature parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static vector_tile.VectorTile.Tile.Feature parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static vector_tile.VectorTile.Tile.Feature parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(vector_tile.VectorTile.Tile.Feature prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Features are described in section 4.2 of the specification
       * </pre>
       *
       * Protobuf type {@code vector_tile.Tile.Feature}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:vector_tile.Tile.Feature)
          vector_tile.VectorTile.Tile.FeatureOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return vector_tile.VectorTile.internal_static_vector_tile_Tile_Feature_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return vector_tile.VectorTile.internal_static_vector_tile_Tile_Feature_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  vector_tile.VectorTile.Tile.Feature.class, vector_tile.VectorTile.Tile.Feature.Builder.class);
        }

        // Construct using vector_tile.VectorTile.Tile.Feature.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          id_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          tags_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          type_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          geometry_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return vector_tile.VectorTile.internal_static_vector_tile_Tile_Feature_descriptor;
        }

        @java.lang.Override
        public vector_tile.VectorTile.Tile.Feature getDefaultInstanceForType() {
          return vector_tile.VectorTile.Tile.Feature.getDefaultInstance();
        }

        @java.lang.Override
        public vector_tile.VectorTile.Tile.Feature build() {
          vector_tile.VectorTile.Tile.Feature result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public vector_tile.VectorTile.Tile.Feature buildPartial() {
          vector_tile.VectorTile.Tile.Feature result = new vector_tile.VectorTile.Tile.Feature(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.id_ = id_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            tags_ = java.util.Collections.unmodifiableList(tags_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.tags_ = tags_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000002;
          }
          result.type_ = type_;
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            geometry_ = java.util.Collections.unmodifiableList(geometry_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.geometry_ = geometry_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return (Builder) super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof vector_tile.VectorTile.Tile.Feature) {
            return mergeFrom((vector_tile.VectorTile.Tile.Feature)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(vector_tile.VectorTile.Tile.Feature other) {
          if (other == vector_tile.VectorTile.Tile.Feature.getDefaultInstance()) return this;
          if (other.hasId()) {
            setId(other.getId());
          }
          if (!other.tags_.isEmpty()) {
            if (tags_.isEmpty()) {
              tags_ = other.tags_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureTagsIsMutable();
              tags_.addAll(other.tags_);
            }
            onChanged();
          }
          if (other.hasType()) {
            setType(other.getType());
          }
          if (!other.geometry_.isEmpty()) {
            if (geometry_.isEmpty()) {
              geometry_ = other.geometry_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureGeometryIsMutable();
              geometry_.addAll(other.geometry_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          vector_tile.VectorTile.Tile.Feature parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (vector_tile.VectorTile.Tile.Feature) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long id_ ;
        /**
         * <code>optional uint64 id = 1 [default = 0];</code>
         */
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint64 id = 1 [default = 0];</code>
         */
        public long getId() {
          return id_;
        }
        /**
         * <code>optional uint64 id = 1 [default = 0];</code>
         */
        public Builder setId(long value) {
          bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 id = 1 [default = 0];</code>
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = 0L;
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Integer> tags_ = java.util.Collections.emptyList();
        private void ensureTagsIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            tags_ = new java.util.ArrayList<java.lang.Integer>(tags_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <pre>
         * Tags of this feature are encoded as repeated pairs of
         * integers.
         * A detailed description of tags is located in sections
         * 4.2 and 4.4 of the specification
         * </pre>
         *
         * <code>repeated uint32 tags = 2 [packed = true];</code>
         */
        public java.util.List<java.lang.Integer>
            getTagsList() {
          return java.util.Collections.unmodifiableList(tags_);
        }
        /**
         * <pre>
         * Tags of this feature are encoded as repeated pairs of
         * integers.
         * A detailed description of tags is located in sections
         * 4.2 and 4.4 of the specification
         * </pre>
         *
         * <code>repeated uint32 tags = 2 [packed = true];</code>
         */
        public int getTagsCount() {
          return tags_.size();
        }
        /**
         * <pre>
         * Tags of this feature are encoded as repeated pairs of
         * integers.
         * A detailed description of tags is located in sections
         * 4.2 and 4.4 of the specification
         * </pre>
         *
         * <code>repeated uint32 tags = 2 [packed = true];</code>
         */
        public int getTags(int index) {
          return tags_.get(index);
        }
        /**
         * <pre>
         * Tags of this feature are encoded as repeated pairs of
         * integers.
         * A detailed description of tags is located in sections
         * 4.2 and 4.4 of the specification
         * </pre>
         *
         * <code>repeated uint32 tags = 2 [packed = true];</code>
         */
        public Builder setTags(
            int index, int value) {
          ensureTagsIsMutable();
          tags_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Tags of this feature are encoded as repeated pairs of
         * integers.
         * A detailed description of tags is located in sections
         * 4.2 and 4.4 of the specification
         * </pre>
         *
         * <code>repeated uint32 tags = 2 [packed = true];</code>
         */
        public Builder addTags(int value) {
          ensureTagsIsMutable();
          tags_.add(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Tags of this feature are encoded as repeated pairs of
         * integers.
         * A detailed description of tags is located in sections
         * 4.2 and 4.4 of the specification
         * </pre>
         *
         * <code>repeated uint32 tags = 2 [packed = true];</code>
         */
        public Builder addAllTags(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureTagsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tags_);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Tags of this feature are encoded as repeated pairs of
         * integers.
         * A detailed description of tags is located in sections
         * 4.2 and 4.4 of the specification
         * </pre>
         *
         * <code>repeated uint32 tags = 2 [packed = true];</code>
         */
        public Builder clearTags() {
          tags_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }

        private int type_ = 0;
        /**
         * <pre>
         * The type of geometry stored in this feature.
         * </pre>
         *
         * <code>optional .vector_tile.Tile.GeomType type = 3 [default = UNKNOWN];</code>
         */
        public boolean hasType() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <pre>
         * The type of geometry stored in this feature.
         * </pre>
         *
         * <code>optional .vector_tile.Tile.GeomType type = 3 [default = UNKNOWN];</code>
         */
        public vector_tile.VectorTile.Tile.GeomType getType() {
          @SuppressWarnings("deprecation")
          vector_tile.VectorTile.Tile.GeomType result = vector_tile.VectorTile.Tile.GeomType.valueOf(type_);
          return result == null ? vector_tile.VectorTile.Tile.GeomType.UNKNOWN : result;
        }
        /**
         * <pre>
         * The type of geometry stored in this feature.
         * </pre>
         *
         * <code>optional .vector_tile.Tile.GeomType type = 3 [default = UNKNOWN];</code>
         */
        public Builder setType(vector_tile.VectorTile.Tile.GeomType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000004;
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The type of geometry stored in this feature.
         * </pre>
         *
         * <code>optional .vector_tile.Tile.GeomType type = 3 [default = UNKNOWN];</code>
         */
        public Builder clearType() {
          bitField0_ = (bitField0_ & ~0x00000004);
          type_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Integer> geometry_ = java.util.Collections.emptyList();
        private void ensureGeometryIsMutable() {
          if (!((bitField0_ & 0x00000008) == 0x00000008)) {
            geometry_ = new java.util.ArrayList<java.lang.Integer>(geometry_);
            bitField0_ |= 0x00000008;
           }
        }
        /**
         * <pre>
         * Contains a stream of commands and parameters (vertices).
         * A detailed description on geometry encoding is located in 
         * section 4.3 of the specification.
         * </pre>
         *
         * <code>repeated uint32 geometry = 4 [packed = true];</code>
         */
        public java.util.List<java.lang.Integer>
            getGeometryList() {
          return java.util.Collections.unmodifiableList(geometry_);
        }
        /**
         * <pre>
         * Contains a stream of commands and parameters (vertices).
         * A detailed description on geometry encoding is located in 
         * section 4.3 of the specification.
         * </pre>
         *
         * <code>repeated uint32 geometry = 4 [packed = true];</code>
         */
        public int getGeometryCount() {
          return geometry_.size();
        }
        /**
         * <pre>
         * Contains a stream of commands and parameters (vertices).
         * A detailed description on geometry encoding is located in 
         * section 4.3 of the specification.
         * </pre>
         *
         * <code>repeated uint32 geometry = 4 [packed = true];</code>
         */
        public int getGeometry(int index) {
          return geometry_.get(index);
        }
        /**
         * <pre>
         * Contains a stream of commands and parameters (vertices).
         * A detailed description on geometry encoding is located in 
         * section 4.3 of the specification.
         * </pre>
         *
         * <code>repeated uint32 geometry = 4 [packed = true];</code>
         */
        public Builder setGeometry(
            int index, int value) {
          ensureGeometryIsMutable();
          geometry_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Contains a stream of commands and parameters (vertices).
         * A detailed description on geometry encoding is located in 
         * section 4.3 of the specification.
         * </pre>
         *
         * <code>repeated uint32 geometry = 4 [packed = true];</code>
         */
        public Builder addGeometry(int value) {
          ensureGeometryIsMutable();
          geometry_.add(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Contains a stream of commands and parameters (vertices).
         * A detailed description on geometry encoding is located in 
         * section 4.3 of the specification.
         * </pre>
         *
         * <code>repeated uint32 geometry = 4 [packed = true];</code>
         */
        public Builder addAllGeometry(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureGeometryIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, geometry_);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Contains a stream of commands and parameters (vertices).
         * A detailed description on geometry encoding is located in 
         * section 4.3 of the specification.
         * </pre>
         *
         * <code>repeated uint32 geometry = 4 [packed = true];</code>
         */
        public Builder clearGeometry() {
          geometry_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:vector_tile.Tile.Feature)
      }

      // @@protoc_insertion_point(class_scope:vector_tile.Tile.Feature)
      private static final vector_tile.VectorTile.Tile.Feature DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new vector_tile.VectorTile.Tile.Feature();
      }

      public static vector_tile.VectorTile.Tile.Feature getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Feature>
          PARSER = new com.google.protobuf.AbstractParser<Feature>() {
        @java.lang.Override
        public Feature parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Feature(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Feature> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Feature> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public vector_tile.VectorTile.Tile.Feature getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface LayerOrBuilder extends
        // @@protoc_insertion_point(interface_extends:vector_tile.Tile.Layer)
        com.google.protobuf.GeneratedMessageV3.
            ExtendableMessageOrBuilder<Layer> {

      /**
       * <pre>
       * Any compliant implementation must first read the version
       * number encoded in this message and choose the correct
       * implementation for this version number before proceeding to
       * decode other parts of this message.
       * </pre>
       *
       * <code>required uint32 version = 15 [default = 1];</code>
       */
      boolean hasVersion();
      /**
       * <pre>
       * Any compliant implementation must first read the version
       * number encoded in this message and choose the correct
       * implementation for this version number before proceeding to
       * decode other parts of this message.
       * </pre>
       *
       * <code>required uint32 version = 15 [default = 1];</code>
       */
      int getVersion();

      /**
       * <code>required string name = 1;</code>
       */
      boolean hasName();
      /**
       * <code>required string name = 1;</code>
       */
      java.lang.String getName();
      /**
       * <code>required string name = 1;</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <pre>
       * The actual features in this tile.
       * </pre>
       *
       * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
       */
      java.util.List<vector_tile.VectorTile.Tile.Feature> 
          getFeaturesList();
      /**
       * <pre>
       * The actual features in this tile.
       * </pre>
       *
       * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
       */
      vector_tile.VectorTile.Tile.Feature getFeatures(int index);
      /**
       * <pre>
       * The actual features in this tile.
       * </pre>
       *
       * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
       */
      int getFeaturesCount();
      /**
       * <pre>
       * The actual features in this tile.
       * </pre>
       *
       * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
       */
      java.util.List<? extends vector_tile.VectorTile.Tile.FeatureOrBuilder> 
          getFeaturesOrBuilderList();
      /**
       * <pre>
       * The actual features in this tile.
       * </pre>
       *
       * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
       */
      vector_tile.VectorTile.Tile.FeatureOrBuilder getFeaturesOrBuilder(
          int index);

      /**
       * <pre>
       * Dictionary encoding for keys
       * </pre>
       *
       * <code>repeated string keys = 3;</code>
       */
      java.util.List<java.lang.String>
          getKeysList();
      /**
       * <pre>
       * Dictionary encoding for keys
       * </pre>
       *
       * <code>repeated string keys = 3;</code>
       */
      int getKeysCount();
      /**
       * <pre>
       * Dictionary encoding for keys
       * </pre>
       *
       * <code>repeated string keys = 3;</code>
       */
      java.lang.String getKeys(int index);
      /**
       * <pre>
       * Dictionary encoding for keys
       * </pre>
       *
       * <code>repeated string keys = 3;</code>
       */
      com.google.protobuf.ByteString
          getKeysBytes(int index);

      /**
       * <pre>
       * Dictionary encoding for values
       * </pre>
       *
       * <code>repeated .vector_tile.Tile.Value values = 4;</code>
       */
      java.util.List<vector_tile.VectorTile.Tile.Value> 
          getValuesList();
      /**
       * <pre>
       * Dictionary encoding for values
       * </pre>
       *
       * <code>repeated .vector_tile.Tile.Value values = 4;</code>
       */
      vector_tile.VectorTile.Tile.Value getValues(int index);
      /**
       * <pre>
       * Dictionary encoding for values
       * </pre>
       *
       * <code>repeated .vector_tile.Tile.Value values = 4;</code>
       */
      int getValuesCount();
      /**
       * <pre>
       * Dictionary encoding for values
       * </pre>
       *
       * <code>repeated .vector_tile.Tile.Value values = 4;</code>
       */
      java.util.List<? extends vector_tile.VectorTile.Tile.ValueOrBuilder> 
          getValuesOrBuilderList();
      /**
       * <pre>
       * Dictionary encoding for values
       * </pre>
       *
       * <code>repeated .vector_tile.Tile.Value values = 4;</code>
       */
      vector_tile.VectorTile.Tile.ValueOrBuilder getValuesOrBuilder(
          int index);

      /**
       * <pre>
       * Although this is an "optional" field it is required by the specification.
       * See https://github.com/mapbox/vector-tile-spec/issues/47
       * </pre>
       *
       * <code>optional uint32 extent = 5 [default = 4096];</code>
       */
      boolean hasExtent();
      /**
       * <pre>
       * Although this is an "optional" field it is required by the specification.
       * See https://github.com/mapbox/vector-tile-spec/issues/47
       * </pre>
       *
       * <code>optional uint32 extent = 5 [default = 4096];</code>
       */
      int getExtent();
    }
    /**
     * <pre>
     * Layers are described in section 4.1 of the specification
     * </pre>
     *
     * Protobuf type {@code vector_tile.Tile.Layer}
     */
    public  static final class Layer extends
        com.google.protobuf.GeneratedMessageV3.ExtendableMessage<
          Layer> implements
        // @@protoc_insertion_point(message_implements:vector_tile.Tile.Layer)
        LayerOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Layer.newBuilder() to construct.
      private Layer(com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<vector_tile.VectorTile.Tile.Layer, ?> builder) {
        super(builder);
      }
      private Layer() {
        version_ = 1;
        name_ = "";
        features_ = java.util.Collections.emptyList();
        keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        values_ = java.util.Collections.emptyList();
        extent_ = 4096;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Layer(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                name_ = bs;
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  features_ = new java.util.ArrayList<vector_tile.VectorTile.Tile.Feature>();
                  mutable_bitField0_ |= 0x00000004;
                }
                features_.add(
                    input.readMessage(vector_tile.VectorTile.Tile.Feature.PARSER, extensionRegistry));
                break;
              }
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  keys_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000008;
                }
                keys_.add(bs);
                break;
              }
              case 34: {
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                  values_ = new java.util.ArrayList<vector_tile.VectorTile.Tile.Value>();
                  mutable_bitField0_ |= 0x00000010;
                }
                values_.add(
                    input.readMessage(vector_tile.VectorTile.Tile.Value.PARSER, extensionRegistry));
                break;
              }
              case 40: {
                bitField0_ |= 0x00000004;
                extent_ = input.readUInt32();
                break;
              }
              case 120: {
                bitField0_ |= 0x00000001;
                version_ = input.readUInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            features_ = java.util.Collections.unmodifiableList(features_);
          }
          if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
            keys_ = keys_.getUnmodifiableView();
          }
          if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
            values_ = java.util.Collections.unmodifiableList(values_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return vector_tile.VectorTile.internal_static_vector_tile_Tile_Layer_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return vector_tile.VectorTile.internal_static_vector_tile_Tile_Layer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                vector_tile.VectorTile.Tile.Layer.class, vector_tile.VectorTile.Tile.Layer.Builder.class);
      }

      private int bitField0_;
      public static final int VERSION_FIELD_NUMBER = 15;
      private int version_;
      /**
       * <pre>
       * Any compliant implementation must first read the version
       * number encoded in this message and choose the correct
       * implementation for this version number before proceeding to
       * decode other parts of this message.
       * </pre>
       *
       * <code>required uint32 version = 15 [default = 1];</code>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Any compliant implementation must first read the version
       * number encoded in this message and choose the correct
       * implementation for this version number before proceeding to
       * decode other parts of this message.
       * </pre>
       *
       * <code>required uint32 version = 15 [default = 1];</code>
       */
      public int getVersion() {
        return version_;
      }

      public static final int NAME_FIELD_NUMBER = 1;
      private volatile java.lang.Object name_;
      /**
       * <code>required string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int FEATURES_FIELD_NUMBER = 2;
      private java.util.List<vector_tile.VectorTile.Tile.Feature> features_;
      /**
       * <pre>
       * The actual features in this tile.
       * </pre>
       *
       * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
       */
      public java.util.List<vector_tile.VectorTile.Tile.Feature> getFeaturesList() {
        return features_;
      }
      /**
       * <pre>
       * The actual features in this tile.
       * </pre>
       *
       * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
       */
      public java.util.List<? extends vector_tile.VectorTile.Tile.FeatureOrBuilder> 
          getFeaturesOrBuilderList() {
        return features_;
      }
      /**
       * <pre>
       * The actual features in this tile.
       * </pre>
       *
       * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
       */
      public int getFeaturesCount() {
        return features_.size();
      }
      /**
       * <pre>
       * The actual features in this tile.
       * </pre>
       *
       * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
       */
      public vector_tile.VectorTile.Tile.Feature getFeatures(int index) {
        return features_.get(index);
      }
      /**
       * <pre>
       * The actual features in this tile.
       * </pre>
       *
       * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
       */
      public vector_tile.VectorTile.Tile.FeatureOrBuilder getFeaturesOrBuilder(
          int index) {
        return features_.get(index);
      }

      public static final int KEYS_FIELD_NUMBER = 3;
      private com.google.protobuf.LazyStringList keys_;
      /**
       * <pre>
       * Dictionary encoding for keys
       * </pre>
       *
       * <code>repeated string keys = 3;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getKeysList() {
        return keys_;
      }
      /**
       * <pre>
       * Dictionary encoding for keys
       * </pre>
       *
       * <code>repeated string keys = 3;</code>
       */
      public int getKeysCount() {
        return keys_.size();
      }
      /**
       * <pre>
       * Dictionary encoding for keys
       * </pre>
       *
       * <code>repeated string keys = 3;</code>
       */
      public java.lang.String getKeys(int index) {
        return keys_.get(index);
      }
      /**
       * <pre>
       * Dictionary encoding for keys
       * </pre>
       *
       * <code>repeated string keys = 3;</code>
       */
      public com.google.protobuf.ByteString
          getKeysBytes(int index) {
        return keys_.getByteString(index);
      }

      public static final int VALUES_FIELD_NUMBER = 4;
      private java.util.List<vector_tile.VectorTile.Tile.Value> values_;
      /**
       * <pre>
       * Dictionary encoding for values
       * </pre>
       *
       * <code>repeated .vector_tile.Tile.Value values = 4;</code>
       */
      public java.util.List<vector_tile.VectorTile.Tile.Value> getValuesList() {
        return values_;
      }
      /**
       * <pre>
       * Dictionary encoding for values
       * </pre>
       *
       * <code>repeated .vector_tile.Tile.Value values = 4;</code>
       */
      public java.util.List<? extends vector_tile.VectorTile.Tile.ValueOrBuilder> 
          getValuesOrBuilderList() {
        return values_;
      }
      /**
       * <pre>
       * Dictionary encoding for values
       * </pre>
       *
       * <code>repeated .vector_tile.Tile.Value values = 4;</code>
       */
      public int getValuesCount() {
        return values_.size();
      }
      /**
       * <pre>
       * Dictionary encoding for values
       * </pre>
       *
       * <code>repeated .vector_tile.Tile.Value values = 4;</code>
       */
      public vector_tile.VectorTile.Tile.Value getValues(int index) {
        return values_.get(index);
      }
      /**
       * <pre>
       * Dictionary encoding for values
       * </pre>
       *
       * <code>repeated .vector_tile.Tile.Value values = 4;</code>
       */
      public vector_tile.VectorTile.Tile.ValueOrBuilder getValuesOrBuilder(
          int index) {
        return values_.get(index);
      }

      public static final int EXTENT_FIELD_NUMBER = 5;
      private int extent_;
      /**
       * <pre>
       * Although this is an "optional" field it is required by the specification.
       * See https://github.com/mapbox/vector-tile-spec/issues/47
       * </pre>
       *
       * <code>optional uint32 extent = 5 [default = 4096];</code>
       */
      public boolean hasExtent() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Although this is an "optional" field it is required by the specification.
       * See https://github.com/mapbox/vector-tile-spec/issues/47
       * </pre>
       *
       * <code>optional uint32 extent = 5 [default = 4096];</code>
       */
      public int getExtent() {
        return extent_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasVersion()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        for (int i = 0; i < getValuesCount(); i++) {
          if (!getValues(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        if (!extensionsAreInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        com.google.protobuf.GeneratedMessageV3
          .ExtendableMessage<vector_tile.VectorTile.Tile.Layer>.ExtensionWriter
            extensionWriter = newExtensionWriter();
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
        }
        for (int i = 0; i < features_.size(); i++) {
          output.writeMessage(2, features_.get(i));
        }
        for (int i = 0; i < keys_.size(); i++) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, keys_.getRaw(i));
        }
        for (int i = 0; i < values_.size(); i++) {
          output.writeMessage(4, values_.get(i));
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(5, extent_);
        }
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(15, version_);
        }
        extensionWriter.writeUntil(536870912, output);
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
        }
        for (int i = 0; i < features_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, features_.get(i));
        }
        {
          int dataSize = 0;
          for (int i = 0; i < keys_.size(); i++) {
            dataSize += computeStringSizeNoTag(keys_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getKeysList().size();
        }
        for (int i = 0; i < values_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, values_.get(i));
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, extent_);
        }
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(15, version_);
        }
        size += extensionsSerializedSize();
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof vector_tile.VectorTile.Tile.Layer)) {
          return super.equals(obj);
        }
        vector_tile.VectorTile.Tile.Layer other = (vector_tile.VectorTile.Tile.Layer) obj;

        boolean result = true;
        result = result && (hasVersion() == other.hasVersion());
        if (hasVersion()) {
          result = result && (getVersion()
              == other.getVersion());
        }
        result = result && (hasName() == other.hasName());
        if (hasName()) {
          result = result && getName()
              .equals(other.getName());
        }
        result = result && getFeaturesList()
            .equals(other.getFeaturesList());
        result = result && getKeysList()
            .equals(other.getKeysList());
        result = result && getValuesList()
            .equals(other.getValuesList());
        result = result && (hasExtent() == other.hasExtent());
        if (hasExtent()) {
          result = result && (getExtent()
              == other.getExtent());
        }
        result = result && unknownFields.equals(other.unknownFields);
        result = result &&
            getExtensionFields().equals(other.getExtensionFields());
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasVersion()) {
          hash = (37 * hash) + VERSION_FIELD_NUMBER;
          hash = (53 * hash) + getVersion();
        }
        if (hasName()) {
          hash = (37 * hash) + NAME_FIELD_NUMBER;
          hash = (53 * hash) + getName().hashCode();
        }
        if (getFeaturesCount() > 0) {
          hash = (37 * hash) + FEATURES_FIELD_NUMBER;
          hash = (53 * hash) + getFeaturesList().hashCode();
        }
        if (getKeysCount() > 0) {
          hash = (37 * hash) + KEYS_FIELD_NUMBER;
          hash = (53 * hash) + getKeysList().hashCode();
        }
        if (getValuesCount() > 0) {
          hash = (37 * hash) + VALUES_FIELD_NUMBER;
          hash = (53 * hash) + getValuesList().hashCode();
        }
        if (hasExtent()) {
          hash = (37 * hash) + EXTENT_FIELD_NUMBER;
          hash = (53 * hash) + getExtent();
        }
        hash = hashFields(hash, getExtensionFields());
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static vector_tile.VectorTile.Tile.Layer parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static vector_tile.VectorTile.Tile.Layer parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static vector_tile.VectorTile.Tile.Layer parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static vector_tile.VectorTile.Tile.Layer parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static vector_tile.VectorTile.Tile.Layer parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static vector_tile.VectorTile.Tile.Layer parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static vector_tile.VectorTile.Tile.Layer parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static vector_tile.VectorTile.Tile.Layer parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static vector_tile.VectorTile.Tile.Layer parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static vector_tile.VectorTile.Tile.Layer parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static vector_tile.VectorTile.Tile.Layer parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static vector_tile.VectorTile.Tile.Layer parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(vector_tile.VectorTile.Tile.Layer prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Layers are described in section 4.1 of the specification
       * </pre>
       *
       * Protobuf type {@code vector_tile.Tile.Layer}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<
            vector_tile.VectorTile.Tile.Layer, Builder> implements
          // @@protoc_insertion_point(builder_implements:vector_tile.Tile.Layer)
          vector_tile.VectorTile.Tile.LayerOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return vector_tile.VectorTile.internal_static_vector_tile_Tile_Layer_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return vector_tile.VectorTile.internal_static_vector_tile_Tile_Layer_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  vector_tile.VectorTile.Tile.Layer.class, vector_tile.VectorTile.Tile.Layer.Builder.class);
        }

        // Construct using vector_tile.VectorTile.Tile.Layer.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getFeaturesFieldBuilder();
            getValuesFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          version_ = 1;
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          if (featuresBuilder_ == null) {
            features_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            featuresBuilder_.clear();
          }
          keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000008);
          if (valuesBuilder_ == null) {
            values_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            valuesBuilder_.clear();
          }
          extent_ = 4096;
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return vector_tile.VectorTile.internal_static_vector_tile_Tile_Layer_descriptor;
        }

        @java.lang.Override
        public vector_tile.VectorTile.Tile.Layer getDefaultInstanceForType() {
          return vector_tile.VectorTile.Tile.Layer.getDefaultInstance();
        }

        @java.lang.Override
        public vector_tile.VectorTile.Tile.Layer build() {
          vector_tile.VectorTile.Tile.Layer result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public vector_tile.VectorTile.Tile.Layer buildPartial() {
          vector_tile.VectorTile.Tile.Layer result = new vector_tile.VectorTile.Tile.Layer(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.version_ = version_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.name_ = name_;
          if (featuresBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              features_ = java.util.Collections.unmodifiableList(features_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.features_ = features_;
          } else {
            result.features_ = featuresBuilder_.build();
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            keys_ = keys_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.keys_ = keys_;
          if (valuesBuilder_ == null) {
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
              values_ = java.util.Collections.unmodifiableList(values_);
              bitField0_ = (bitField0_ & ~0x00000010);
            }
            result.values_ = values_;
          } else {
            result.values_ = valuesBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000004;
          }
          result.extent_ = extent_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return (Builder) super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public <Type> Builder setExtension(
            com.google.protobuf.GeneratedMessage.GeneratedExtension<
                vector_tile.VectorTile.Tile.Layer, Type> extension,
            Type value) {
          return (Builder) super.setExtension(extension, value);
        }
        @java.lang.Override
        public <Type> Builder setExtension(
            com.google.protobuf.GeneratedMessage.GeneratedExtension<
                vector_tile.VectorTile.Tile.Layer, java.util.List<Type>> extension,
            int index, Type value) {
          return (Builder) super.setExtension(extension, index, value);
        }
        @java.lang.Override
        public <Type> Builder addExtension(
            com.google.protobuf.GeneratedMessage.GeneratedExtension<
                vector_tile.VectorTile.Tile.Layer, java.util.List<Type>> extension,
            Type value) {
          return (Builder) super.addExtension(extension, value);
        }
        @java.lang.Override
        public <Type> Builder clearExtension(
            com.google.protobuf.GeneratedMessage.GeneratedExtension<
                vector_tile.VectorTile.Tile.Layer, ?> extension) {
          return (Builder) super.clearExtension(extension);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof vector_tile.VectorTile.Tile.Layer) {
            return mergeFrom((vector_tile.VectorTile.Tile.Layer)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(vector_tile.VectorTile.Tile.Layer other) {
          if (other == vector_tile.VectorTile.Tile.Layer.getDefaultInstance()) return this;
          if (other.hasVersion()) {
            setVersion(other.getVersion());
          }
          if (other.hasName()) {
            bitField0_ |= 0x00000002;
            name_ = other.name_;
            onChanged();
          }
          if (featuresBuilder_ == null) {
            if (!other.features_.isEmpty()) {
              if (features_.isEmpty()) {
                features_ = other.features_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureFeaturesIsMutable();
                features_.addAll(other.features_);
              }
              onChanged();
            }
          } else {
            if (!other.features_.isEmpty()) {
              if (featuresBuilder_.isEmpty()) {
                featuresBuilder_.dispose();
                featuresBuilder_ = null;
                features_ = other.features_;
                bitField0_ = (bitField0_ & ~0x00000004);
                featuresBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getFeaturesFieldBuilder() : null;
              } else {
                featuresBuilder_.addAllMessages(other.features_);
              }
            }
          }
          if (!other.keys_.isEmpty()) {
            if (keys_.isEmpty()) {
              keys_ = other.keys_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureKeysIsMutable();
              keys_.addAll(other.keys_);
            }
            onChanged();
          }
          if (valuesBuilder_ == null) {
            if (!other.values_.isEmpty()) {
              if (values_.isEmpty()) {
                values_ = other.values_;
                bitField0_ = (bitField0_ & ~0x00000010);
              } else {
                ensureValuesIsMutable();
                values_.addAll(other.values_);
              }
              onChanged();
            }
          } else {
            if (!other.values_.isEmpty()) {
              if (valuesBuilder_.isEmpty()) {
                valuesBuilder_.dispose();
                valuesBuilder_ = null;
                values_ = other.values_;
                bitField0_ = (bitField0_ & ~0x00000010);
                valuesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getValuesFieldBuilder() : null;
              } else {
                valuesBuilder_.addAllMessages(other.values_);
              }
            }
          }
          if (other.hasExtent()) {
            setExtent(other.getExtent());
          }
          this.mergeExtensionFields(other);
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          if (!hasVersion()) {
            return false;
          }
          if (!hasName()) {
            return false;
          }
          for (int i = 0; i < getValuesCount(); i++) {
            if (!getValues(i).isInitialized()) {
              return false;
            }
          }
          if (!extensionsAreInitialized()) {
            return false;
          }
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          vector_tile.VectorTile.Tile.Layer parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (vector_tile.VectorTile.Tile.Layer) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int version_ = 1;
        /**
         * <pre>
         * Any compliant implementation must first read the version
         * number encoded in this message and choose the correct
         * implementation for this version number before proceeding to
         * decode other parts of this message.
         * </pre>
         *
         * <code>required uint32 version = 15 [default = 1];</code>
         */
        public boolean hasVersion() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <pre>
         * Any compliant implementation must first read the version
         * number encoded in this message and choose the correct
         * implementation for this version number before proceeding to
         * decode other parts of this message.
         * </pre>
         *
         * <code>required uint32 version = 15 [default = 1];</code>
         */
        public int getVersion() {
          return version_;
        }
        /**
         * <pre>
         * Any compliant implementation must first read the version
         * number encoded in this message and choose the correct
         * implementation for this version number before proceeding to
         * decode other parts of this message.
         * </pre>
         *
         * <code>required uint32 version = 15 [default = 1];</code>
         */
        public Builder setVersion(int value) {
          bitField0_ |= 0x00000001;
          version_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Any compliant implementation must first read the version
         * number encoded in this message and choose the correct
         * implementation for this version number before proceeding to
         * decode other parts of this message.
         * </pre>
         *
         * <code>required uint32 version = 15 [default = 1];</code>
         */
        public Builder clearVersion() {
          bitField0_ = (bitField0_ & ~0x00000001);
          version_ = 1;
          onChanged();
          return this;
        }

        private java.lang.Object name_ = "";
        /**
         * <code>required string name = 1;</code>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string name = 1;</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string name = 1;</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string name = 1;</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1;</code>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000002);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1;</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          name_ = value;
          onChanged();
          return this;
        }

        private java.util.List<vector_tile.VectorTile.Tile.Feature> features_ =
          java.util.Collections.emptyList();
        private void ensureFeaturesIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            features_ = new java.util.ArrayList<vector_tile.VectorTile.Tile.Feature>(features_);
            bitField0_ |= 0x00000004;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            vector_tile.VectorTile.Tile.Feature, vector_tile.VectorTile.Tile.Feature.Builder, vector_tile.VectorTile.Tile.FeatureOrBuilder> featuresBuilder_;

        /**
         * <pre>
         * The actual features in this tile.
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
         */
        public java.util.List<vector_tile.VectorTile.Tile.Feature> getFeaturesList() {
          if (featuresBuilder_ == null) {
            return java.util.Collections.unmodifiableList(features_);
          } else {
            return featuresBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * The actual features in this tile.
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
         */
        public int getFeaturesCount() {
          if (featuresBuilder_ == null) {
            return features_.size();
          } else {
            return featuresBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * The actual features in this tile.
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
         */
        public vector_tile.VectorTile.Tile.Feature getFeatures(int index) {
          if (featuresBuilder_ == null) {
            return features_.get(index);
          } else {
            return featuresBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * The actual features in this tile.
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
         */
        public Builder setFeatures(
            int index, vector_tile.VectorTile.Tile.Feature value) {
          if (featuresBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureFeaturesIsMutable();
            features_.set(index, value);
            onChanged();
          } else {
            featuresBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * The actual features in this tile.
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
         */
        public Builder setFeatures(
            int index, vector_tile.VectorTile.Tile.Feature.Builder builderForValue) {
          if (featuresBuilder_ == null) {
            ensureFeaturesIsMutable();
            features_.set(index, builderForValue.build());
            onChanged();
          } else {
            featuresBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * The actual features in this tile.
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
         */
        public Builder addFeatures(vector_tile.VectorTile.Tile.Feature value) {
          if (featuresBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureFeaturesIsMutable();
            features_.add(value);
            onChanged();
          } else {
            featuresBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * The actual features in this tile.
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
         */
        public Builder addFeatures(
            int index, vector_tile.VectorTile.Tile.Feature value) {
          if (featuresBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureFeaturesIsMutable();
            features_.add(index, value);
            onChanged();
          } else {
            featuresBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * The actual features in this tile.
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
         */
        public Builder addFeatures(
            vector_tile.VectorTile.Tile.Feature.Builder builderForValue) {
          if (featuresBuilder_ == null) {
            ensureFeaturesIsMutable();
            features_.add(builderForValue.build());
            onChanged();
          } else {
            featuresBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * The actual features in this tile.
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
         */
        public Builder addFeatures(
            int index, vector_tile.VectorTile.Tile.Feature.Builder builderForValue) {
          if (featuresBuilder_ == null) {
            ensureFeaturesIsMutable();
            features_.add(index, builderForValue.build());
            onChanged();
          } else {
            featuresBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * The actual features in this tile.
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
         */
        public Builder addAllFeatures(
            java.lang.Iterable<? extends vector_tile.VectorTile.Tile.Feature> values) {
          if (featuresBuilder_ == null) {
            ensureFeaturesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, features_);
            onChanged();
          } else {
            featuresBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * The actual features in this tile.
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
         */
        public Builder clearFeatures() {
          if (featuresBuilder_ == null) {
            features_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
          } else {
            featuresBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * The actual features in this tile.
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
         */
        public Builder removeFeatures(int index) {
          if (featuresBuilder_ == null) {
            ensureFeaturesIsMutable();
            features_.remove(index);
            onChanged();
          } else {
            featuresBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * The actual features in this tile.
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
         */
        public vector_tile.VectorTile.Tile.Feature.Builder getFeaturesBuilder(
            int index) {
          return getFeaturesFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * The actual features in this tile.
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
         */
        public vector_tile.VectorTile.Tile.FeatureOrBuilder getFeaturesOrBuilder(
            int index) {
          if (featuresBuilder_ == null) {
            return features_.get(index);  } else {
            return featuresBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * The actual features in this tile.
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
         */
        public java.util.List<? extends vector_tile.VectorTile.Tile.FeatureOrBuilder> 
             getFeaturesOrBuilderList() {
          if (featuresBuilder_ != null) {
            return featuresBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(features_);
          }
        }
        /**
         * <pre>
         * The actual features in this tile.
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
         */
        public vector_tile.VectorTile.Tile.Feature.Builder addFeaturesBuilder() {
          return getFeaturesFieldBuilder().addBuilder(
              vector_tile.VectorTile.Tile.Feature.getDefaultInstance());
        }
        /**
         * <pre>
         * The actual features in this tile.
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
         */
        public vector_tile.VectorTile.Tile.Feature.Builder addFeaturesBuilder(
            int index) {
          return getFeaturesFieldBuilder().addBuilder(
              index, vector_tile.VectorTile.Tile.Feature.getDefaultInstance());
        }
        /**
         * <pre>
         * The actual features in this tile.
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
         */
        public java.util.List<vector_tile.VectorTile.Tile.Feature.Builder> 
             getFeaturesBuilderList() {
          return getFeaturesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            vector_tile.VectorTile.Tile.Feature, vector_tile.VectorTile.Tile.Feature.Builder, vector_tile.VectorTile.Tile.FeatureOrBuilder> 
            getFeaturesFieldBuilder() {
          if (featuresBuilder_ == null) {
            featuresBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                vector_tile.VectorTile.Tile.Feature, vector_tile.VectorTile.Tile.Feature.Builder, vector_tile.VectorTile.Tile.FeatureOrBuilder>(
                    features_,
                    ((bitField0_ & 0x00000004) == 0x00000004),
                    getParentForChildren(),
                    isClean());
            features_ = null;
          }
          return featuresBuilder_;
        }

        private com.google.protobuf.LazyStringList keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureKeysIsMutable() {
          if (!((bitField0_ & 0x00000008) == 0x00000008)) {
            keys_ = new com.google.protobuf.LazyStringArrayList(keys_);
            bitField0_ |= 0x00000008;
           }
        }
        /**
         * <pre>
         * Dictionary encoding for keys
         * </pre>
         *
         * <code>repeated string keys = 3;</code>
         */
        public com.google.protobuf.ProtocolStringList
            getKeysList() {
          return keys_.getUnmodifiableView();
        }
        /**
         * <pre>
         * Dictionary encoding for keys
         * </pre>
         *
         * <code>repeated string keys = 3;</code>
         */
        public int getKeysCount() {
          return keys_.size();
        }
        /**
         * <pre>
         * Dictionary encoding for keys
         * </pre>
         *
         * <code>repeated string keys = 3;</code>
         */
        public java.lang.String getKeys(int index) {
          return keys_.get(index);
        }
        /**
         * <pre>
         * Dictionary encoding for keys
         * </pre>
         *
         * <code>repeated string keys = 3;</code>
         */
        public com.google.protobuf.ByteString
            getKeysBytes(int index) {
          return keys_.getByteString(index);
        }
        /**
         * <pre>
         * Dictionary encoding for keys
         * </pre>
         *
         * <code>repeated string keys = 3;</code>
         */
        public Builder setKeys(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureKeysIsMutable();
          keys_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Dictionary encoding for keys
         * </pre>
         *
         * <code>repeated string keys = 3;</code>
         */
        public Builder addKeys(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureKeysIsMutable();
          keys_.add(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Dictionary encoding for keys
         * </pre>
         *
         * <code>repeated string keys = 3;</code>
         */
        public Builder addAllKeys(
            java.lang.Iterable<java.lang.String> values) {
          ensureKeysIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, keys_);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Dictionary encoding for keys
         * </pre>
         *
         * <code>repeated string keys = 3;</code>
         */
        public Builder clearKeys() {
          keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Dictionary encoding for keys
         * </pre>
         *
         * <code>repeated string keys = 3;</code>
         */
        public Builder addKeysBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureKeysIsMutable();
          keys_.add(value);
          onChanged();
          return this;
        }

        private java.util.List<vector_tile.VectorTile.Tile.Value> values_ =
          java.util.Collections.emptyList();
        private void ensureValuesIsMutable() {
          if (!((bitField0_ & 0x00000010) == 0x00000010)) {
            values_ = new java.util.ArrayList<vector_tile.VectorTile.Tile.Value>(values_);
            bitField0_ |= 0x00000010;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            vector_tile.VectorTile.Tile.Value, vector_tile.VectorTile.Tile.Value.Builder, vector_tile.VectorTile.Tile.ValueOrBuilder> valuesBuilder_;

        /**
         * <pre>
         * Dictionary encoding for values
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
         */
        public java.util.List<vector_tile.VectorTile.Tile.Value> getValuesList() {
          if (valuesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(values_);
          } else {
            return valuesBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * Dictionary encoding for values
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
         */
        public int getValuesCount() {
          if (valuesBuilder_ == null) {
            return values_.size();
          } else {
            return valuesBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * Dictionary encoding for values
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
         */
        public vector_tile.VectorTile.Tile.Value getValues(int index) {
          if (valuesBuilder_ == null) {
            return values_.get(index);
          } else {
            return valuesBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * Dictionary encoding for values
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
         */
        public Builder setValues(
            int index, vector_tile.VectorTile.Tile.Value value) {
          if (valuesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureValuesIsMutable();
            values_.set(index, value);
            onChanged();
          } else {
            valuesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Dictionary encoding for values
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
         */
        public Builder setValues(
            int index, vector_tile.VectorTile.Tile.Value.Builder builderForValue) {
          if (valuesBuilder_ == null) {
            ensureValuesIsMutable();
            values_.set(index, builderForValue.build());
            onChanged();
          } else {
            valuesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Dictionary encoding for values
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
         */
        public Builder addValues(vector_tile.VectorTile.Tile.Value value) {
          if (valuesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureValuesIsMutable();
            values_.add(value);
            onChanged();
          } else {
            valuesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * Dictionary encoding for values
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
         */
        public Builder addValues(
            int index, vector_tile.VectorTile.Tile.Value value) {
          if (valuesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureValuesIsMutable();
            values_.add(index, value);
            onChanged();
          } else {
            valuesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Dictionary encoding for values
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
         */
        public Builder addValues(
            vector_tile.VectorTile.Tile.Value.Builder builderForValue) {
          if (valuesBuilder_ == null) {
            ensureValuesIsMutable();
            values_.add(builderForValue.build());
            onChanged();
          } else {
            valuesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Dictionary encoding for values
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
         */
        public Builder addValues(
            int index, vector_tile.VectorTile.Tile.Value.Builder builderForValue) {
          if (valuesBuilder_ == null) {
            ensureValuesIsMutable();
            values_.add(index, builderForValue.build());
            onChanged();
          } else {
            valuesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Dictionary encoding for values
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
         */
        public Builder addAllValues(
            java.lang.Iterable<? extends vector_tile.VectorTile.Tile.Value> values) {
          if (valuesBuilder_ == null) {
            ensureValuesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, values_);
            onChanged();
          } else {
            valuesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * Dictionary encoding for values
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
         */
        public Builder clearValues() {
          if (valuesBuilder_ == null) {
            values_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000010);
            onChanged();
          } else {
            valuesBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Dictionary encoding for values
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
         */
        public Builder removeValues(int index) {
          if (valuesBuilder_ == null) {
            ensureValuesIsMutable();
            values_.remove(index);
            onChanged();
          } else {
            valuesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * Dictionary encoding for values
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
         */
        public vector_tile.VectorTile.Tile.Value.Builder getValuesBuilder(
            int index) {
          return getValuesFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * Dictionary encoding for values
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
         */
        public vector_tile.VectorTile.Tile.ValueOrBuilder getValuesOrBuilder(
            int index) {
          if (valuesBuilder_ == null) {
            return values_.get(index);  } else {
            return valuesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * Dictionary encoding for values
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
         */
        public java.util.List<? extends vector_tile.VectorTile.Tile.ValueOrBuilder> 
             getValuesOrBuilderList() {
          if (valuesBuilder_ != null) {
            return valuesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(values_);
          }
        }
        /**
         * <pre>
         * Dictionary encoding for values
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
         */
        public vector_tile.VectorTile.Tile.Value.Builder addValuesBuilder() {
          return getValuesFieldBuilder().addBuilder(
              vector_tile.VectorTile.Tile.Value.getDefaultInstance());
        }
        /**
         * <pre>
         * Dictionary encoding for values
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
         */
        public vector_tile.VectorTile.Tile.Value.Builder addValuesBuilder(
            int index) {
          return getValuesFieldBuilder().addBuilder(
              index, vector_tile.VectorTile.Tile.Value.getDefaultInstance());
        }
        /**
         * <pre>
         * Dictionary encoding for values
         * </pre>
         *
         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
         */
        public java.util.List<vector_tile.VectorTile.Tile.Value.Builder> 
             getValuesBuilderList() {
          return getValuesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            vector_tile.VectorTile.Tile.Value, vector_tile.VectorTile.Tile.Value.Builder, vector_tile.VectorTile.Tile.ValueOrBuilder> 
            getValuesFieldBuilder() {
          if (valuesBuilder_ == null) {
            valuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                vector_tile.VectorTile.Tile.Value, vector_tile.VectorTile.Tile.Value.Builder, vector_tile.VectorTile.Tile.ValueOrBuilder>(
                    values_,
                    ((bitField0_ & 0x00000010) == 0x00000010),
                    getParentForChildren(),
                    isClean());
            values_ = null;
          }
          return valuesBuilder_;
        }

        private int extent_ = 4096;
        /**
         * <pre>
         * Although this is an "optional" field it is required by the specification.
         * See https://github.com/mapbox/vector-tile-spec/issues/47
         * </pre>
         *
         * <code>optional uint32 extent = 5 [default = 4096];</code>
         */
        public boolean hasExtent() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <pre>
         * Although this is an "optional" field it is required by the specification.
         * See https://github.com/mapbox/vector-tile-spec/issues/47
         * </pre>
         *
         * <code>optional uint32 extent = 5 [default = 4096];</code>
         */
        public int getExtent() {
          return extent_;
        }
        /**
         * <pre>
         * Although this is an "optional" field it is required by the specification.
         * See https://github.com/mapbox/vector-tile-spec/issues/47
         * </pre>
         *
         * <code>optional uint32 extent = 5 [default = 4096];</code>
         */
        public Builder setExtent(int value) {
          bitField0_ |= 0x00000020;
          extent_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Although this is an "optional" field it is required by the specification.
         * See https://github.com/mapbox/vector-tile-spec/issues/47
         * </pre>
         *
         * <code>optional uint32 extent = 5 [default = 4096];</code>
         */
        public Builder clearExtent() {
          bitField0_ = (bitField0_ & ~0x00000020);
          extent_ = 4096;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:vector_tile.Tile.Layer)
      }

      // @@protoc_insertion_point(class_scope:vector_tile.Tile.Layer)
      private static final vector_tile.VectorTile.Tile.Layer DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new vector_tile.VectorTile.Tile.Layer();
      }

      public static vector_tile.VectorTile.Tile.Layer getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Layer>
          PARSER = new com.google.protobuf.AbstractParser<Layer>() {
        @java.lang.Override
        public Layer parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Layer(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Layer> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Layer> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public vector_tile.VectorTile.Tile.Layer getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int LAYERS_FIELD_NUMBER = 3;
    private java.util.List<vector_tile.VectorTile.Tile.Layer> layers_;
    /**
     * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
     */
    public java.util.List<vector_tile.VectorTile.Tile.Layer> getLayersList() {
      return layers_;
    }
    /**
     * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
     */
    public java.util.List<? extends vector_tile.VectorTile.Tile.LayerOrBuilder> 
        getLayersOrBuilderList() {
      return layers_;
    }
    /**
     * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
     */
    public int getLayersCount() {
      return layers_.size();
    }
    /**
     * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
     */
    public vector_tile.VectorTile.Tile.Layer getLayers(int index) {
      return layers_.get(index);
    }
    /**
     * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
     */
    public vector_tile.VectorTile.Tile.LayerOrBuilder getLayersOrBuilder(
        int index) {
      return layers_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getLayersCount(); i++) {
        if (!getLayers(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .ExtendableMessage<vector_tile.VectorTile.Tile>.ExtensionWriter
          extensionWriter = newExtensionWriter();
      for (int i = 0; i < layers_.size(); i++) {
        output.writeMessage(3, layers_.get(i));
      }
      extensionWriter.writeUntil(8192, output);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < layers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, layers_.get(i));
      }
      size += extensionsSerializedSize();
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof vector_tile.VectorTile.Tile)) {
        return super.equals(obj);
      }
      vector_tile.VectorTile.Tile other = (vector_tile.VectorTile.Tile) obj;

      boolean result = true;
      result = result && getLayersList()
          .equals(other.getLayersList());
      result = result && unknownFields.equals(other.unknownFields);
      result = result &&
          getExtensionFields().equals(other.getExtensionFields());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getLayersCount() > 0) {
        hash = (37 * hash) + LAYERS_FIELD_NUMBER;
        hash = (53 * hash) + getLayersList().hashCode();
      }
      hash = hashFields(hash, getExtensionFields());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static vector_tile.VectorTile.Tile parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vector_tile.VectorTile.Tile parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vector_tile.VectorTile.Tile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vector_tile.VectorTile.Tile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vector_tile.VectorTile.Tile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static vector_tile.VectorTile.Tile parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static vector_tile.VectorTile.Tile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vector_tile.VectorTile.Tile parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static vector_tile.VectorTile.Tile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static vector_tile.VectorTile.Tile parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static vector_tile.VectorTile.Tile parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static vector_tile.VectorTile.Tile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(vector_tile.VectorTile.Tile prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code vector_tile.Tile}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<
          vector_tile.VectorTile.Tile, Builder> implements
        // @@protoc_insertion_point(builder_implements:vector_tile.Tile)
        vector_tile.VectorTile.TileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return vector_tile.VectorTile.internal_static_vector_tile_Tile_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return vector_tile.VectorTile.internal_static_vector_tile_Tile_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                vector_tile.VectorTile.Tile.class, vector_tile.VectorTile.Tile.Builder.class);
      }

      // Construct using vector_tile.VectorTile.Tile.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getLayersFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (layersBuilder_ == null) {
          layers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          layersBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return vector_tile.VectorTile.internal_static_vector_tile_Tile_descriptor;
      }

      @java.lang.Override
      public vector_tile.VectorTile.Tile getDefaultInstanceForType() {
        return vector_tile.VectorTile.Tile.getDefaultInstance();
      }

      @java.lang.Override
      public vector_tile.VectorTile.Tile build() {
        vector_tile.VectorTile.Tile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public vector_tile.VectorTile.Tile buildPartial() {
        vector_tile.VectorTile.Tile result = new vector_tile.VectorTile.Tile(this);
        int from_bitField0_ = bitField0_;
        if (layersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            layers_ = java.util.Collections.unmodifiableList(layers_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.layers_ = layers_;
        } else {
          result.layers_ = layersBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public <Type> Builder setExtension(
          com.google.protobuf.GeneratedMessage.GeneratedExtension<
              vector_tile.VectorTile.Tile, Type> extension,
          Type value) {
        return (Builder) super.setExtension(extension, value);
      }
      @java.lang.Override
      public <Type> Builder setExtension(
          com.google.protobuf.GeneratedMessage.GeneratedExtension<
              vector_tile.VectorTile.Tile, java.util.List<Type>> extension,
          int index, Type value) {
        return (Builder) super.setExtension(extension, index, value);
      }
      @java.lang.Override
      public <Type> Builder addExtension(
          com.google.protobuf.GeneratedMessage.GeneratedExtension<
              vector_tile.VectorTile.Tile, java.util.List<Type>> extension,
          Type value) {
        return (Builder) super.addExtension(extension, value);
      }
      @java.lang.Override
      public <Type> Builder clearExtension(
          com.google.protobuf.GeneratedMessage.GeneratedExtension<
              vector_tile.VectorTile.Tile, ?> extension) {
        return (Builder) super.clearExtension(extension);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof vector_tile.VectorTile.Tile) {
          return mergeFrom((vector_tile.VectorTile.Tile)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(vector_tile.VectorTile.Tile other) {
        if (other == vector_tile.VectorTile.Tile.getDefaultInstance()) return this;
        if (layersBuilder_ == null) {
          if (!other.layers_.isEmpty()) {
            if (layers_.isEmpty()) {
              layers_ = other.layers_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureLayersIsMutable();
              layers_.addAll(other.layers_);
            }
            onChanged();
          }
        } else {
          if (!other.layers_.isEmpty()) {
            if (layersBuilder_.isEmpty()) {
              layersBuilder_.dispose();
              layersBuilder_ = null;
              layers_ = other.layers_;
              bitField0_ = (bitField0_ & ~0x00000001);
              layersBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLayersFieldBuilder() : null;
            } else {
              layersBuilder_.addAllMessages(other.layers_);
            }
          }
        }
        this.mergeExtensionFields(other);
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        for (int i = 0; i < getLayersCount(); i++) {
          if (!getLayers(i).isInitialized()) {
            return false;
          }
        }
        if (!extensionsAreInitialized()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        vector_tile.VectorTile.Tile parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (vector_tile.VectorTile.Tile) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<vector_tile.VectorTile.Tile.Layer> layers_ =
        java.util.Collections.emptyList();
      private void ensureLayersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          layers_ = new java.util.ArrayList<vector_tile.VectorTile.Tile.Layer>(layers_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          vector_tile.VectorTile.Tile.Layer, vector_tile.VectorTile.Tile.Layer.Builder, vector_tile.VectorTile.Tile.LayerOrBuilder> layersBuilder_;

      /**
       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
       */
      public java.util.List<vector_tile.VectorTile.Tile.Layer> getLayersList() {
        if (layersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(layers_);
        } else {
          return layersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
       */
      public int getLayersCount() {
        if (layersBuilder_ == null) {
          return layers_.size();
        } else {
          return layersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
       */
      public vector_tile.VectorTile.Tile.Layer getLayers(int index) {
        if (layersBuilder_ == null) {
          return layers_.get(index);
        } else {
          return layersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
       */
      public Builder setLayers(
          int index, vector_tile.VectorTile.Tile.Layer value) {
        if (layersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLayersIsMutable();
          layers_.set(index, value);
          onChanged();
        } else {
          layersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
       */
      public Builder setLayers(
          int index, vector_tile.VectorTile.Tile.Layer.Builder builderForValue) {
        if (layersBuilder_ == null) {
          ensureLayersIsMutable();
          layers_.set(index, builderForValue.build());
          onChanged();
        } else {
          layersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
       */
      public Builder addLayers(vector_tile.VectorTile.Tile.Layer value) {
        if (layersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLayersIsMutable();
          layers_.add(value);
          onChanged();
        } else {
          layersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
       */
      public Builder addLayers(
          int index, vector_tile.VectorTile.Tile.Layer value) {
        if (layersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLayersIsMutable();
          layers_.add(index, value);
          onChanged();
        } else {
          layersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
       */
      public Builder addLayers(
          vector_tile.VectorTile.Tile.Layer.Builder builderForValue) {
        if (layersBuilder_ == null) {
          ensureLayersIsMutable();
          layers_.add(builderForValue.build());
          onChanged();
        } else {
          layersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
       */
      public Builder addLayers(
          int index, vector_tile.VectorTile.Tile.Layer.Builder builderForValue) {
        if (layersBuilder_ == null) {
          ensureLayersIsMutable();
          layers_.add(index, builderForValue.build());
          onChanged();
        } else {
          layersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
       */
      public Builder addAllLayers(
          java.lang.Iterable<? extends vector_tile.VectorTile.Tile.Layer> values) {
        if (layersBuilder_ == null) {
          ensureLayersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, layers_);
          onChanged();
        } else {
          layersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
       */
      public Builder clearLayers() {
        if (layersBuilder_ == null) {
          layers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          layersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
       */
      public Builder removeLayers(int index) {
        if (layersBuilder_ == null) {
          ensureLayersIsMutable();
          layers_.remove(index);
          onChanged();
        } else {
          layersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
       */
      public vector_tile.VectorTile.Tile.Layer.Builder getLayersBuilder(
          int index) {
        return getLayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
       */
      public vector_tile.VectorTile.Tile.LayerOrBuilder getLayersOrBuilder(
          int index) {
        if (layersBuilder_ == null) {
          return layers_.get(index);  } else {
          return layersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
       */
      public java.util.List<? extends vector_tile.VectorTile.Tile.LayerOrBuilder> 
           getLayersOrBuilderList() {
        if (layersBuilder_ != null) {
          return layersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(layers_);
        }
      }
      /**
       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
       */
      public vector_tile.VectorTile.Tile.Layer.Builder addLayersBuilder() {
        return getLayersFieldBuilder().addBuilder(
            vector_tile.VectorTile.Tile.Layer.getDefaultInstance());
      }
      /**
       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
       */
      public vector_tile.VectorTile.Tile.Layer.Builder addLayersBuilder(
          int index) {
        return getLayersFieldBuilder().addBuilder(
            index, vector_tile.VectorTile.Tile.Layer.getDefaultInstance());
      }
      /**
       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
       */
      public java.util.List<vector_tile.VectorTile.Tile.Layer.Builder> 
           getLayersBuilderList() {
        return getLayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          vector_tile.VectorTile.Tile.Layer, vector_tile.VectorTile.Tile.Layer.Builder, vector_tile.VectorTile.Tile.LayerOrBuilder> 
          getLayersFieldBuilder() {
        if (layersBuilder_ == null) {
          layersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              vector_tile.VectorTile.Tile.Layer, vector_tile.VectorTile.Tile.Layer.Builder, vector_tile.VectorTile.Tile.LayerOrBuilder>(
                  layers_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          layers_ = null;
        }
        return layersBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:vector_tile.Tile)
    }

    // @@protoc_insertion_point(class_scope:vector_tile.Tile)
    private static final vector_tile.VectorTile.Tile DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new vector_tile.VectorTile.Tile();
    }

    public static vector_tile.VectorTile.Tile getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Tile>
        PARSER = new com.google.protobuf.AbstractParser<Tile>() {
      @java.lang.Override
      public Tile parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Tile(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Tile> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Tile> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public vector_tile.VectorTile.Tile getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_vector_tile_Tile_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_vector_tile_Tile_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_vector_tile_Tile_Value_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_vector_tile_Tile_Value_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_vector_tile_Tile_Feature_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_vector_tile_Tile_Feature_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_vector_tile_Tile_Layer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_vector_tile_Tile_Layer_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n$src/main/resources/vector_tile.proto\022\013" +
      "vector_tile\"\300\004\n\004Tile\022\'\n\006layers\030\003 \003(\0132\027.v" +
      "ector_tile.Tile.Layer\032\241\001\n\005Value\022\024\n\014strin" +
      "g_value\030\001 \001(\t\022\023\n\013float_value\030\002 \001(\002\022\024\n\014do" +
      "uble_value\030\003 \001(\001\022\021\n\tint_value\030\004 \001(\003\022\022\n\nu" +
      "int_value\030\005 \001(\004\022\022\n\nsint_value\030\006 \001(\022\022\022\n\nb" +
      "ool_value\030\007 \001(\010*\010\010\010\020\200\200\200\200\002\032s\n\007Feature\022\r\n\002" +
      "id\030\001 \001(\004:\0010\022\020\n\004tags\030\002 \003(\rB\002\020\001\0221\n\004type\030\003 " +
      "\001(\0162\032.vector_tile.Tile.GeomType:\007UNKNOWN" +
      "\022\024\n\010geometry\030\004 \003(\rB\002\020\001\032\255\001\n\005Layer\022\022\n\007vers" +
      "ion\030\017 \002(\r:\0011\022\014\n\004name\030\001 \002(\t\022+\n\010features\030\002" +
      " \003(\0132\031.vector_tile.Tile.Feature\022\014\n\004keys\030" +
      "\003 \003(\t\022\'\n\006values\030\004 \003(\0132\027.vector_tile.Tile" +
      ".Value\022\024\n\006extent\030\005 \001(\r:\0044096*\010\010\020\020\200\200\200\200\002\"?" +
      "\n\010GeomType\022\013\n\007UNKNOWN\020\000\022\t\n\005POINT\020\001\022\016\n\nLI" +
      "NESTRING\020\002\022\013\n\007POLYGON\020\003*\005\010\020\020\200@"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_vector_tile_Tile_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_vector_tile_Tile_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_vector_tile_Tile_descriptor,
        new java.lang.String[] { "Layers", });
    internal_static_vector_tile_Tile_Value_descriptor =
      internal_static_vector_tile_Tile_descriptor.getNestedTypes().get(0);
    internal_static_vector_tile_Tile_Value_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_vector_tile_Tile_Value_descriptor,
        new java.lang.String[] { "StringValue", "FloatValue", "DoubleValue", "IntValue", "UintValue", "SintValue", "BoolValue", });
    internal_static_vector_tile_Tile_Feature_descriptor =
      internal_static_vector_tile_Tile_descriptor.getNestedTypes().get(1);
    internal_static_vector_tile_Tile_Feature_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_vector_tile_Tile_Feature_descriptor,
        new java.lang.String[] { "Id", "Tags", "Type", "Geometry", });
    internal_static_vector_tile_Tile_Layer_descriptor =
      internal_static_vector_tile_Tile_descriptor.getNestedTypes().get(2);
    internal_static_vector_tile_Tile_Layer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_vector_tile_Tile_Layer_descriptor,
        new java.lang.String[] { "Version", "Name", "Features", "Keys", "Values", "Extent", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}

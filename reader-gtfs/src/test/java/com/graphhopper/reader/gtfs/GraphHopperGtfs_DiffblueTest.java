/*
 * Copyright 2018 Diffblue Limited
 *
 * Diffblue Limited licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.graphhopper.reader.gtfs;

import static org.mockito.AdditionalMatchers.or;
import static org.mockito.Matchers.isA;
import static org.mockito.Matchers.isNull;

import com.graphhopper.reader.gtfs.GraphHopperGtfs;
import com.graphhopper.storage.DAType;
import com.graphhopper.storage.GHDirectory;
import com.graphhopper.util.TranslationMap;
import org.junit.Assert;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;
import org.junit.runner.RunWith;
import org.powermock.api.mockito.PowerMockito;
import org.powermock.core.classloader.annotations.PrepareForTest;
import org.powermock.modules.junit4.PowerMockRunner;

@RunWith(PowerMockRunner.class)
public class GraphHopperGtfs_DiffblueTest {

  @Rule public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: GraphHopperGtfs */

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire method.
   */
  @PrepareForTest({GraphHopperGtfs.class})
  @Test
  public void createGHDirectoryInputNotNullOutputNotNull() throws Exception {

    // Arrange
    final String graphHopperFolder = "";
    final GHDirectory gHDirectory = PowerMockito.mock(GHDirectory.class);
    PowerMockito.whenNew(GHDirectory.class)
        .withParameterTypes(java.lang.String.class, com.graphhopper.storage.DAType.class)
        .withArguments(or(isA(String.class), isNull(String.class)),
                       or(isA(DAType.class), isNull(DAType.class)))
        .thenReturn(gHDirectory);

    // Act
    final GHDirectory retval = GraphHopperGtfs.createGHDirectory(graphHopperFolder);

    // Assert result
    Assert.assertNotNull(retval);
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire method.
   */
  @PrepareForTest({TranslationMap.class, GraphHopperGtfs.class})
  @Test
  public void createTranslationMapOutputNotNull() throws Exception {

    // Arrange
    final TranslationMap translationMap = PowerMockito.mock(TranslationMap.class);
    final TranslationMap translationMap1 = PowerMockito.mock(TranslationMap.class);
    PowerMockito.doReturn(translationMap1).when(translationMap);
    translationMap.doImport();
    PowerMockito.whenNew(TranslationMap.class).withNoArguments().thenReturn(translationMap);

    // Act
    final TranslationMap retval = GraphHopperGtfs.createTranslationMap();

    // Assert result
    Assert.assertNotNull(retval);
  }
}

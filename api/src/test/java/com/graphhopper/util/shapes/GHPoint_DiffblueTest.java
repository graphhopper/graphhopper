/*
 * Copyright 2018 Diffblue Limited
 *
 * Diffblue Limited licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.graphhopper.util.shapes;

import com.graphhopper.util.shapes.GHPoint;
import org.junit.Assert;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

public class GHPoint_DiffblueTest {

  @Rule public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: GHPoint */

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   *  - conditional line 94 branch to line 95
   */

  @Test
  public void equalsInputNullOutputFalse() {

    // Arrange
    final GHPoint objectUnderTest = new GHPoint(0.0, 0.0);
    final Object obj = null;

    // Act
    final boolean retval = objectUnderTest.equals(obj);

    // Assert result
    Assert.assertEquals(false, retval);
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   *  - conditional line 51 branch to line 51
   */

  @Test
  public void fromJsonInput1OutputArrayIndexOutOfBoundsException() {

    // Arrange
    final double[] xy = {0.0};

    // Act
    thrown.expect(ArrayIndexOutOfBoundsException.class);
    GHPoint.fromJson(xy);

    // Method is not expected to return due to exception thrown
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   *  - conditional line 51 branch to line 51
   */

  @Test
  public void fromJsonInput2OutputNotNull() {

    // Arrange
    final double[] xy = {0.0, 0.0};

    // Act
    final GHPoint retval = GHPoint.fromJson(xy);

    // Assert result
    Assert.assertNotNull(retval);
    Assert.assertEquals(0.0, retval.lon, 0.0);
    Assert.assertEquals(0.0, retval.lat, 0.0);
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire method.
   */

  @Test
  public void toGeoJsonOutput2() {

    // Arrange
    final GHPoint objectUnderTest = new GHPoint(0.0, 0.0);

    // Act
    final Double[] retval = objectUnderTest.toGeoJson();

    // Assert result
    Assert.assertArrayEquals(new Double[] {0.0, 0.0}, retval);
  }
}
